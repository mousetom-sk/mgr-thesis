NLStack

NLAndLuka

Parameter containing:
tensor([ -4.0228,  -7.0535,  -3.0539,  -3.6991,  -4.3874,  -4.4407,  -5.6516,
         -3.4762,  -3.6830,  -4.9742,  -3.6322,  -4.2891,  -3.2436,  -4.1276,
         -4.8172,  -4.9082,  -3.6325,  -2.3716,  -4.1930,  -7.7360,  -3.9581,
         -6.0502,  -2.8751, -10.2694,  -8.5053,  -6.3703,  -7.7914,  -4.9490,
         -8.4018,  -4.9589,  -4.8527,  -6.3029,  -6.1738,  -5.7941,  -6.4522,
         -6.9572,  -4.9902,  -6.1986, -10.0537,  -5.4682,  -4.4813,  -2.0000],
       device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-2.9337, -3.9786, -2.0629, -2.9306, -4.2461, -2.1148, -3.8501, -2.7963,
        -4.9428, -3.1328, -3.6963, -1.9227, -4.3549, -3.6872, -0.5942, -3.9658,
        -3.9070, -4.3556, -2.5624, -5.3006, -2.5807, -4.2695, -3.1033, -8.2278,
        -5.5433, -3.9883, -6.7858, -4.3242, -5.6225, -4.3839, -6.1484, -6.7764,
        -7.3735, -3.0215, -5.5392, -8.4468, -4.0709, -3.4726, -3.5312, -5.1569,
        -2.4619, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -4.8540,  -6.1658,  -1.9440,  -3.2235,  -2.4943,  -3.3920,  -4.9038,
         -4.3184,  -2.8927,  -3.7749,  -4.1527,  -3.7183,  -5.7740,  -3.3566,
         -2.7693,  -4.6258,  -6.2044,  -2.3477,  -4.7332,  -4.2528,  -3.4256,
         -4.4315,  -2.4263, -10.3992,  -9.3365,  -6.1296,  -6.8854,  -3.4912,
         -4.4748,  -4.9474,  -5.2052,  -4.8125,  -4.9867,  -4.1570,  -7.8032,
         -9.1699,  -4.7149,  -4.1535,  -6.5441,  -4.7490,  -4.5984,  -2.0000],
       device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.7702, -4.2036, -2.6502, -3.2343, -3.3802, -3.6943, -3.4148, -3.1051,
        -4.5076, -3.0892, -3.8617, -2.2040, -4.4137, -3.0016, -2.2828, -3.7230,
        -3.6686, -2.6962, -3.9456, -6.3582, -3.0084, -4.5144, -2.9961, -9.1267,
        -8.7652, -4.6395, -5.2537, -2.1471, -6.9988, -3.1023, -5.3254, -4.3328,
        -7.1251, -1.8311, -6.4771, -7.3768, -4.1998, -3.8898, -5.2416, -4.3630,
        -2.0389, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -4.3878,  -6.0904,  -6.3717,  -5.3481,  -2.5990,  -5.7452,  -7.8462,
         -5.3256, -11.1263,  -4.3639,  -5.1534,  -4.2895,  -6.9512,  -4.9824,
         -5.0741,  -4.5262,  -7.7449,  -6.5425,  -3.0174,  -7.6952,  -4.9860,
         -9.6995,  -6.6221,  -1.5117,  -6.4041,  -9.6749,  -7.4119,  -3.4082,
         -6.6484,  -3.6044, -10.0777,  -8.6113, -10.3992,  -4.6149,  -6.2044,
         -5.8109,  -7.8914,  -5.0629,  -6.4254, -10.3182,  -5.0315,  -2.0000],
       device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.2829, -5.9303, -2.3319, -3.2842, -5.3596, -2.7413, -3.6080, -3.7226,
        -4.6608, -3.8264, -3.3067, -2.6003, -6.8449, -2.6325, -2.8317, -4.1429,
        -6.2108, -2.7742, -4.6301, -5.7264, -3.1044, -6.2102, -2.4804, -7.3911,
        -6.7532, -4.0256, -7.2956, -5.1269, -6.2776, -3.2557, -4.7145, -6.1815,
        -7.4861, -3.5639, -9.4169, -9.2091, -5.7168, -2.7650, -6.1820, -4.5247,
        -3.1314, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.1631, -5.3027, -3.0449, -2.3228, -3.2213, -3.6402, -3.9648, -3.7221,
        -6.2158, -3.4707, -3.8953, -3.1062, -4.4470, -3.0446, -2.8416, -4.7643,
        -5.5422, -3.0415, -2.8550, -6.8960, -3.2884, -4.4223, -1.8534, -8.1977,
        -8.5719, -5.2764, -5.8430, -3.7991, -5.3163, -4.5849, -7.2322, -6.8511,
        -6.8229, -4.3992, -7.5273, -7.4272, -3.3385, -3.8908, -5.9627, -5.6874,
        -2.8706, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -2.7869,  -7.6893,  -3.6623,  -3.9768,  -6.3289,  -3.2509,  -3.6992,
         -3.2062,  -7.8544,  -3.7788,  -4.1724,  -3.2584,  -3.5646,  -3.8788,
         -4.3769,  -4.5072,  -7.7309,  -1.7719,  -4.4487,  -7.9987,  -3.6760,
        -10.9268,  -2.5078,  -6.7783,  -7.0009,  -2.0874, -10.0332,  -5.3327,
         -8.3682,  -4.0561,  -7.3015,  -8.4080,  -9.0813,  -5.5765,  -7.8760,
         -6.2913,  -6.9971,  -3.4798, -10.6681,  -4.7629,  -3.5344,  -2.0000],
       device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -9.4704,  -2.6050,  -7.9130,  -9.3957, -10.5152,  -8.1216,  -0.9503,
         -8.8150,  -6.9370,  -9.2696,  -8.6515,  -8.6073,  -5.3899,  -8.0680,
         -8.6681,  -9.3600,  -6.9091,  -9.4232, -10.1281,  -2.2591,  -8.6508,
         -4.0530,  -9.9491,  -5.9826,  -2.4033,  -0.8221,  -6.3212, -10.6070,
         -4.2540,  -9.4293,  -5.8086,  -7.1001,  -6.8471,  -8.8966,  -8.7631,
         -7.5861,  -2.6129,  -7.8994,  -0.6557,  -1.5203,  -9.6156,  -2.0000],
       device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-2.5577, -4.0527, -2.6963, -2.7361, -3.6434, -3.6935, -3.3522, -1.9243,
        -3.7717, -3.0436, -2.8727, -2.7708, -4.2453, -2.7028, -2.5927, -3.4690,
        -3.4210, -2.6798, -1.8695, -5.7164, -2.4475, -4.7990, -2.7667, -7.6117,
        -7.2458, -5.0018, -3.8127, -5.6319, -8.2412, -3.5131, -7.1101, -7.2873,
        -5.1418, -4.2337, -8.7831, -8.2590, -4.0733, -5.2881, -4.6556, -4.5811,
        -2.7994, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.3263, -5.1625, -4.1626, -1.3329, -5.4047, -1.9665, -3.4487, -4.0052,
        -3.9275, -3.5460, -3.0775, -3.4274, -6.6008, -2.6490, -2.5616, -3.3049,
        -6.4527, -3.3164, -2.4547, -5.5061, -2.9005, -5.6379, -3.4132, -4.2821,
        -8.0379, -4.0839, -8.4305, -4.7424, -5.3864, -4.7738, -4.7980, -6.0661,
        -5.2628, -2.8743, -7.4796, -8.7018, -5.2867, -2.3898, -5.8725, -5.3813,
        -2.8259, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.6625, -5.8664, -3.5220, -2.6193, -4.3617, -3.5240, -4.4179, -2.7772,
        -8.1065, -2.3883, -3.3256, -2.9501, -7.8930, -3.1593, -2.6040, -3.3578,
        -7.2676, -3.6286, -3.9694, -7.7430, -3.2026, -7.5005, -2.6037, -6.0257,
        -8.5074, -5.2758, -6.1411, -3.1624, -8.2485, -2.4189, -9.0750, -7.8026,
        -6.6823, -2.5599, -9.2913, -8.7187, -6.8984, -2.5607, -5.2881, -5.8511,
        -1.8407, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-5.5684, -3.9234, -2.7930, -2.6527, -4.4647, -2.8464, -3.7778, -2.8995,
        -4.0389, -3.6023, -2.8141, -3.6105, -4.1554, -2.9725, -2.2388, -4.1939,
        -4.7642, -4.6657, -3.6552, -5.5789, -3.2608, -3.0695, -2.3180, -7.9657,
        -8.3717, -2.9275, -6.3521, -3.2037, -6.5810, -3.1205, -4.1122, -6.6217,
        -4.6239, -3.1066, -5.8420, -5.7064, -2.6055, -2.5075, -2.5174, -4.9685,
        -2.4511, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.1532, -5.7135, -3.2637, -3.3256, -5.1554, -3.4461, -3.9319, -3.2585,
        -4.3669, -3.5434, -3.5001, -3.9055, -4.0610, -2.9248, -4.3408, -3.9325,
        -5.7790, -2.0778, -4.0059, -5.1917, -3.4771, -6.5299, -2.1079, -6.2520,
        -5.6479, -3.8347, -5.2217, -3.7380, -5.6860, -3.8951, -5.4971, -5.6846,
        -4.6237, -4.2515, -7.8386, -3.9508, -4.7936, -2.7201, -8.5090, -4.1821,
        -3.5405, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.7589, -3.9426, -2.5824, -2.0061, -3.8969, -3.3450, -3.9798, -2.1679,
        -6.8089, -2.4200, -2.5240, -2.9037, -4.9600, -2.0573, -3.1239, -2.9744,
        -6.7146, -2.8580, -3.5417, -6.7103, -2.5488, -4.1776, -3.2752, -6.9031,
        -7.7189, -5.0228, -5.6198, -5.5651, -8.6315, -3.0969, -9.4820, -7.9732,
        -5.6084, -2.5895, -9.8254, -6.6682, -6.2638, -2.5966, -5.2933, -5.5447,
        -1.7363, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.0064, -3.4491, -3.3404, -1.3824, -4.4527, -2.3459, -3.4750, -3.0385,
        -3.7079, -2.9183, -3.2398, -3.1873, -5.0765, -3.4510, -2.3648, -2.3402,
        -4.5801, -3.6521, -3.4394, -4.7831, -2.5258, -4.7122, -3.8865, -6.3467,
        -7.6890, -4.3949, -8.6117, -4.9437, -5.8545, -5.1352, -5.3304, -7.7678,
        -6.1929, -3.3488, -8.9408, -9.0336, -6.1561, -3.7272, -4.4776, -4.5815,
        -2.1725, -2.0000], device='cuda:1', requires_grad=True)

