NLStack

NLAndLuka

Parameter containing:
tensor([  4.6333,  -6.7902,  -5.3927,  -4.5011,  -2.8556,  -5.4904,  -3.0918,
         -5.7348,  -6.0258,  -4.2443,  -3.7456,  -3.4882,  -4.9135,  -5.2656,
         -3.8841,  -3.2939,   5.5098,  -1.9578,  -8.4426,  -2.1547,  -3.8897,
         -9.3262,   1.5806,   6.5847,   5.9531,  -6.8217,  11.4924, -12.2237,
         -0.3611,  -3.5743,  -0.9135,  -7.7507, -10.0396,  -4.8508,   3.3842,
         -7.5926,  -6.9499,  -8.3327,  -7.5284,  -3.8691,  -6.7980,  -2.0000],
       device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 1.6892,  2.6395,  3.6634,  5.0297,  1.6396,  2.6599,  4.3987,  2.7434,
         5.3497,  3.2219,  2.3273,  2.0231,  3.1300,  3.1295,  3.6085,  2.1611,
         5.2610,  3.8214,  1.3454,  2.8494,  3.3011,  4.7877,  3.1760,  5.3878,
         6.8675,  3.2665, 11.1724, -4.3981, -1.7170,  0.5328, -2.1443,  3.3406,
         5.1668,  2.1415,  2.8438,  2.5556,  1.2199,  2.6032,  1.6553,  3.4528,
         1.9657, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 2.2164,  3.0239,  2.8977,  1.9381,  0.1641,  2.1268,  2.6292,  4.3234,
        -0.1678,  3.2002,  3.7781,  1.9679,  2.8201,  2.6125,  2.1297,  2.5999,
         3.7010,  0.8509,  1.9473,  1.3826,  3.1850,  1.0442, -1.6001,  5.9367,
         5.6425,  2.7358,  9.6663, -3.8554, -5.2825,  2.6462, -5.1221, -0.8038,
         4.2772,  0.3271,  0.2481,  3.3448, -0.6428,  3.5786,  1.7000,  1.1282,
         1.8485, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 3.7053,  6.9140,  2.8154,  3.4153,  3.8705,  2.7720,  4.9493,  2.9798,
         4.5344,  3.8818,  4.3975,  3.4071,  2.8282,  4.6808,  3.1998,  3.3166,
         6.3213,  1.5007,  2.3012,  4.6359,  4.0178,  7.0128,  0.7542,  7.6570,
         5.9777,  1.4783, 12.3838, -5.1174, -1.7556,  3.6299, -2.8113,  3.2079,
         5.4938,  3.3078,  2.1853,  3.6972, -1.3022,  2.8889,  5.0618,  2.5884,
         0.8772, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.0686,  6.3835, -4.8020, -4.3381,  1.7367, -4.9277, -6.0783, -4.7292,
         2.1822, -4.5895, -4.5105, -5.5137, -1.4942, -4.8329, -4.4362, -2.2642,
         4.2046, -6.0146, -2.4813,  4.1220, -4.1721,  6.6230, -7.0715,  6.2148,
         5.0653, -7.9128, 12.0863,  0.2481, -2.5902, -6.3185, -3.3506,  2.9393,
         4.4293, -2.9530,  2.1379,  2.5483, -8.5036, -6.4596,  3.5882, -4.8059,
        -6.4071, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 2.2874,  5.8421,  4.4039,  4.0025,  2.5407,  4.2629,  4.4449,  4.0886,
         2.7138,  4.7236,  4.0066,  3.8366,  4.1458,  4.2718,  3.9465,  3.6038,
         4.4090,  2.5421,  4.1936,  3.6621,  4.5075,  7.8731, -0.2826,  5.5621,
         5.5865,  2.9157,  9.5970, -3.1837, -1.2754,  3.2730, -2.8316,  4.2354,
         3.6938,  2.2377, -0.6939,  2.8322,  2.2581,  4.3288,  3.1336,  2.9786,
         2.4742, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 3.4772,  5.1892,  5.3643,  5.4588,  2.0138,  3.9659,  6.1968,  5.3056,
         4.4748,  5.9366,  4.3203,  4.0998,  4.8991,  5.0697,  4.6988,  3.1778,
         5.6612,  4.2532,  1.9859,  3.3173,  5.5198,  4.3781,  1.6858,  3.0539,
         7.4933,  3.4095, 11.8014, -4.1097, -2.7674,  3.3340, -5.9800,  3.3645,
         3.8534,  1.4577,  1.4650,  1.1505,  2.0757,  5.2222,  2.5619,  3.3306,
         2.2365, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.2606, -4.2601, -3.2048,  3.1627,  0.2347, -3.1753, -3.2019, -5.0377,
        -0.9270, -3.7198, -4.1922, -3.4633, -6.5779, -2.4539,  1.8590, -4.8516,
        -2.6394, -5.4043,  0.4613, -5.3225, -3.0572,  3.3660, -1.9183,  5.6680,
        -9.3409, -5.3518,  9.2716, -3.3557, -1.6421, -5.3672, -5.4624,  0.9802,
         1.4592,  2.8277, -1.0094, -9.7450, -1.1504, -2.7735,  1.5115, -5.0478,
         2.0382, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -7.3409,  -1.1766,  -6.8977,  -6.4424,  -9.9949,  -6.9890,  -2.0955,
         -2.6222,  -0.9841,  -6.2993,  -6.8957,  -7.5470,   2.3545,  -6.9865,
         -7.2142,  -6.6019,   0.4967,  -6.4109,  -5.2315,  -5.4034,  -6.1502,
         -2.4725, -11.0230,   0.2462,   4.4401,   4.4151,   9.1736,  -7.9670,
        -10.0529,  -8.9684,  -5.8738,  -0.7556,   0.5339,  -9.3954,  -0.8677,
          3.0562,  -1.1711,  -7.9964,  -3.0987,  -4.3435,  -4.2504,  -2.0000],
       device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 0.8488,  4.0518,  2.3277,  1.7583,  0.5398,  1.7144,  3.3161,  2.3859,
         1.0896,  2.8801,  2.4040,  2.5927,  4.0012,  2.5566,  2.0659,  2.0976,
         4.7051,  0.9583,  1.6643,  1.1915,  3.0144,  2.8902, -1.2689,  6.2948,
         4.7126,  1.5160, 11.3797, -3.8398, -3.2977,  1.6209, -3.4616,  1.7739,
         3.3006,  0.7844,  1.3985,  3.1091, -0.2433,  0.8486,  2.4119,  1.6790,
         0.6693, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 0.4320,  7.7617,  4.9769,  3.9449,  5.0171,  3.2455,  4.1255,  3.8373,
         3.0688,  6.0647,  4.8739,  4.3223,  5.6135,  4.5715,  3.9038,  3.0511,
         4.5168, -0.2457,  4.4851,  4.5337,  4.8720,  8.0135, -2.6857,  5.0587,
         6.2160,  0.3902,  9.7171, -3.6413, -1.4141,  6.1713, -2.9330,  1.6799,
         4.2882,  1.5748,  1.1038,  2.3998,  1.9898,  4.0798,  6.4851,  1.8908,
         1.7566, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 0.9999,  4.2149,  3.6620,  4.9139,  2.1211,  3.8056,  3.8624,  3.2457,
         1.1378,  4.5917,  4.1379,  3.0873,  4.0825,  3.3742,  2.8324,  2.9123,
         4.4640,  2.7066,  2.6046,  2.6652,  4.2443,  3.9822, -1.3862,  4.8999,
         5.6103,  1.7245, 10.0256, -2.4299, -2.7773,  3.0468, -3.3398,  1.9248,
         4.3973,  0.1050,  1.6571,  2.9330, -0.8559,  5.4020,  2.5295,  1.5184,
         2.4645, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([  1.5911,  -5.5189,  -6.8828,  -6.2300,  -6.8741,  -3.0836,  -4.8710,
         -4.3246,  -7.3910,  -3.5788,  -3.9221,  -4.4462,  -7.4901,  -3.5896,
         -4.9194,  -3.7345,  -9.1455,  -3.8036,  -1.8080,  -2.2775,  -4.2683,
        -12.2317,  -4.1130,   4.2382,   6.4238,  -4.3895, -10.6811,   1.9339,
         -7.4538,  -3.6250,  -9.1579, -10.7016,  -6.8071,  -3.5924, -10.6690,
         -5.3860,  -9.4446,   6.3855,  -6.8296,  -7.3360,  -7.2640,  -2.0000],
       device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-0.2754,  5.3032,  3.1954,  3.9710,  2.8543,  2.1242,  3.2510,  1.9236,
         1.6238,  3.9309,  3.4463,  2.9970,  2.4859,  4.5391,  2.3464,  2.0230,
         1.8692, -0.6367,  1.8298,  1.8472,  3.3964,  7.0035, -4.2564,  4.7607,
         4.9746,  0.0124, 10.1863, -5.6484, -3.1602,  4.0598, -6.2147, -0.1143,
         2.6161,  3.0742, -1.0744,  3.2964, -0.7496,  4.1045,  1.7696,  2.7115,
         1.6497, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -9.5490,  -7.7144,  -2.9304,  -5.7165,  -8.9002,  -6.2218,  -6.8732,
         -3.5453,  -1.8755,  -5.9855,  -8.2028,  -7.8346,  -9.8023,  -7.4305,
         -5.4720,  -4.1400,  -6.8733,  -4.5804, -11.4373,  -7.8873,  -6.8168,
          2.6545,  -0.3033, -10.8478, -10.6782,  -2.1161,  -3.5131,  -7.1158,
         -9.6625,  -8.4748,  -9.5880,  -2.9928,   0.9929,  -3.2687,  -5.7113,
         -8.7307,  -8.6473,  -5.4590,  -8.5295,   1.5543,  -3.0862,  -2.0000],
       device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -8.2037,  -6.4505,  -4.5321,  -3.1018,  -3.3186,  -4.2872,  -7.4288,
         -6.8125, -10.8599,  -6.2127,  -4.9586,  -2.7846,   2.6596,  -6.6398,
         -6.9193,  -7.9221,  -6.7000,  -3.0666,  -0.9482,  -9.7821,  -6.2224,
          3.9732,  -2.3487,  -8.8059,  -9.1740,  -6.9949, -10.8907,  -2.2732,
         -0.2018,  -1.1867,  -5.1171,  -9.4443, -10.4801, -10.4150,  -3.4910,
         -0.5188,  -0.3911,  -4.4878,  -5.3457,  -8.0264,   1.6395,  -2.0000],
       device='cuda:1', requires_grad=True)

