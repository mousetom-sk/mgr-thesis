NLStack

NLAndLuka

Parameter containing:
tensor([-6.4650, -5.9608, -4.3444, -4.0369, -7.3538, -3.6374, -5.0226, -4.8600,
        -4.8399, -4.6190, -5.6022, -4.6141, -2.7626, -5.9174, -5.6670, -4.8804,
        -6.1089, -2.2795, -6.2691, -7.8998, -4.7024, -4.9317, -5.3535, -8.2743,
        -8.1145, -3.9120, -9.3445, -6.6770, -8.2362, -5.4610, -6.9968, -4.8378,
        -7.6797, -7.7468, -4.3480, -4.0507, -6.4486, -5.0674, -8.3743, -5.2854,
        -4.5099, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.7849, -4.4058, -3.3054, -3.9392, -4.5153, -3.0784, -4.7832, -3.9484,
        -5.4794, -3.6571, -3.5664, -3.7326, -3.5063, -4.1181, -4.3046, -3.7182,
        -5.1519, -3.0755, -4.3702, -4.5215, -3.3786, -5.1389, -4.7265, -8.9209,
        -6.2372, -5.2825, -7.6244, -6.0136, -6.5972, -4.3651, -8.3159, -6.7062,
        -5.8363, -6.1895, -5.7922, -4.4287, -7.9107, -3.9909, -6.1275, -4.8886,
        -4.9488, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-10.1443,  -5.7889,  -4.4252,  -3.2431,  -1.9598,  -5.9996,  -7.3397,
         -5.1787,  -6.3905,  -4.3026,  -5.3996,  -5.6425,  -9.2083,  -4.3679,
         -4.8046,  -4.6678,  -7.8794,  -5.8011,  -4.9288,  -8.3432,  -4.9030,
         -2.7765,  -8.5418,  -9.2480, -11.5178,  -9.9072,  -4.9143,  -3.9435,
         -6.0327,  -5.6315,  -9.5502,  -6.4389,  -6.6696,  -4.6380,  -9.5838,
         -7.1958, -10.0498,  -4.9664,  -6.7883,  -7.0570,  -4.3202,  -2.0000],
       device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.4514, -5.2435, -4.0647, -3.6702, -6.1770, -3.5480, -5.6392, -4.1282,
        -2.6166, -5.2034, -4.4112, -5.4344, -3.0211, -5.1918, -4.2374, -5.4190,
        -5.5607, -5.5159, -4.0843, -6.6251, -4.3527, -3.1030, -7.2387, -8.3022,
        -8.6950, -3.8662, -9.6804, -5.6647, -8.5504, -7.3560, -4.3476, -5.9433,
        -4.2874, -6.7690, -5.2306, -7.0541, -4.0415, -5.9493, -6.0296, -6.9312,
        -4.8717, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -4.0555,  -7.1461,  -7.1751,  -6.6907,  -6.4110,  -5.9380,  -7.5595,
         -5.8049, -10.2763,  -6.0312,  -5.0447,  -5.8501,  -2.4255,  -5.8861,
         -7.2665,  -7.3849,  -7.8259,  -5.8612,  -2.3644,  -7.8838,  -6.3994,
         -9.3482,  -5.3610,  -4.2684,  -4.7026,  -6.0621,  -8.4092,  -5.5285,
         -8.3842,  -3.7710,  -7.5864,  -9.2097,  -8.6301,  -8.5144,  -5.3128,
         -2.7676,  -3.5842,  -4.8112,  -6.7412, -10.3563,  -5.6656,  -2.0000],
       device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -3.3053,  -7.1026,  -5.4116,  -5.3315,  -5.4251,  -4.5135,  -5.6655,
         -4.8392,  -5.5696,  -4.7440,  -4.5946,  -5.6417, -10.4169,  -4.1124,
         -3.6205,  -3.8903,  -7.8532,  -5.1160,  -5.6196,  -4.4495,  -4.6196,
         -9.9922,  -4.8375,  -6.3472,  -6.2564,  -5.9300,  -7.7310,  -6.4499,
         -8.0295,  -6.3644,  -8.1894,  -7.6408,  -6.1423,  -2.9091,  -8.6251,
         -9.3266,  -9.4437,  -4.1249,  -5.8904,  -5.8881,  -7.0284,  -2.0000],
       device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-5.2591, -3.5586, -3.7344, -3.1245, -4.3544, -4.5497, -4.0172, -2.8349,
        -5.0742, -3.3429, -3.4302, -4.0043, -5.2164, -3.8633, -3.2695, -2.7270,
        -3.7932, -4.9603, -5.0083, -5.8231, -3.1628, -3.9936, -5.6410, -7.7286,
        -8.5063, -5.8573, -6.3930, -5.5599, -7.6195, -4.6311, -6.3401, -6.3998,
        -6.0648, -3.8237, -4.6111, -6.3296, -7.4720, -5.9114, -4.0052, -4.2248,
        -4.0698, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.0006, -5.6577, -4.1875, -4.0507, -5.9289, -3.6335, -4.7118, -4.2904,
        -6.4025, -4.0563, -4.6473, -4.0003, -3.9538, -5.0767, -4.7558, -4.1735,
        -5.9463, -2.5886, -4.7378, -6.8614, -4.3006, -5.6668, -3.6281, -5.6436,
        -6.9560, -3.9805, -8.1118, -5.0928, -6.2723, -4.3031, -7.5528, -4.1621,
        -7.5073, -5.9478, -3.8754, -4.6892, -6.3085, -4.1416, -6.9581, -4.5929,
        -3.7671, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -6.5413,  -4.7917,  -6.4974,  -6.4353,  -5.6832,  -6.6949,  -4.6315,
         -6.5817,  -9.8452,  -5.5895,  -6.8499,  -4.9892,  -9.5290,  -6.2606,
         -5.2438,  -6.4592,  -6.4371,  -7.2374,  -7.0492,  -4.6865,  -5.7957,
         -8.3807,  -9.4687,  -8.0576,  -6.6011,  -8.7188,  -5.1567,  -9.8065,
         -5.0409,  -5.7874,  -9.9940,  -8.5317, -10.8951,  -6.4751, -10.5316,
        -10.1803,  -8.6052,  -6.9445,  -4.3502,  -6.9743,  -6.8194,  -2.0000],
       device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-5.3673, -3.9706, -3.2698, -3.5425, -4.0383, -3.6956, -4.5155, -3.7861,
        -5.8871, -3.6481, -3.1326, -2.8887, -6.2408, -3.0735, -3.5686, -3.6422,
        -4.9623, -6.2087, -4.8955, -4.8639, -3.1547, -4.6576, -6.7205, -9.9094,
        -8.3138, -7.3732, -6.7804, -6.0328, -6.3776, -3.4360, -6.9194, -7.7022,
        -7.6493, -4.1630, -7.4232, -7.5325, -7.9019, -5.1057, -4.1067, -5.3749,
        -3.8707, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -3.9317,  -6.8450,  -5.0168,  -4.5265,  -6.4192,  -4.6435,  -4.9899,
         -4.5161,  -3.8365,  -4.8543,  -5.3672,  -5.4818, -10.0353,  -3.6492,
         -4.8044,  -3.4907,  -7.8241,  -3.0735,  -6.9045,  -6.1056,  -4.7129,
         -7.7466,  -4.0933,  -6.3577,  -6.6878,  -4.5029,  -7.0688,  -6.0015,
         -7.7163,  -6.6039,  -5.6374,  -4.8260,  -5.4895,  -2.4590,  -8.9671,
         -7.2405,  -9.4219,  -3.7179,  -8.1362,  -3.7700,  -5.0859,  -2.0000],
       device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.5919, -5.0998, -4.6934, -4.6293, -4.1152, -3.6992, -5.3648, -4.9595,
        -7.7831, -3.7599, -3.8435, -3.7554, -5.6530, -4.4443, -3.8443, -4.9031,
        -6.5784, -5.6218, -2.9150, -4.8847, -4.2629, -6.2100, -4.9155, -5.8499,
        -5.5030, -5.8999, -7.3921, -4.4243, -4.8217, -2.9228, -7.3066, -7.5103,
        -6.3479, -4.9935, -6.9368, -7.6747, -6.9690, -2.9225, -4.3906, -6.9360,
        -5.1867, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.3536, -3.2399, -3.4972, -3.4692, -4.3239, -3.8211, -3.2231, -3.4682,
        -4.0709, -3.5034, -3.5608, -3.2631, -5.3938, -3.3636, -2.6686, -3.3155,
        -4.0367, -5.1013, -4.8067, -5.8522, -2.9983, -4.7948, -7.0971, -9.2447,
        -8.5313, -4.5203, -5.8341, -6.7838, -6.9804, -4.5025, -5.2766, -5.3141,
        -8.1993, -3.7871, -6.5342, -7.2628, -6.5999, -5.4619, -3.3339, -3.6105,
        -4.2505, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.0333, -4.1742, -3.2682, -4.5208, -5.9158, -4.0102, -4.2526, -2.5536,
        -5.2351, -3.2594, -4.3076, -3.2905, -4.0478, -3.2869, -4.2887, -3.8318,
        -5.3323, -3.2688, -4.2373, -5.8430, -3.4503, -5.3190, -5.7461, -7.5536,
        -4.6613, -4.6789, -6.4746, -4.8519, -8.9696, -3.7070, -7.0075, -5.6282,
        -6.5521, -4.8789, -5.8624, -4.4650, -5.6968, -3.5805, -7.0918, -4.7355,
        -3.1914, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.6875, -4.4836, -4.5638, -3.8229, -4.8492, -3.5349, -4.8638, -4.3750,
        -8.0009, -4.0833, -3.9378, -2.9949, -5.1479, -4.1096, -3.7234, -4.4944,
        -5.8940, -5.7479, -4.1908, -7.2288, -4.0124, -5.2055, -4.8756, -5.8906,
        -6.9978, -5.9055, -6.9868, -5.2824, -5.9688, -3.1214, -5.8105, -8.0788,
        -9.2198, -4.2325, -6.2029, -7.0100, -5.8059, -3.7718, -4.1184, -8.9517,
        -2.9980, -2.0000], device='cuda:1', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.9314, -5.1326, -2.9591, -3.9907, -2.8019, -3.4450, -4.2460, -5.0727,
        -4.6484, -4.3354, -3.7399, -3.6673, -8.1841, -3.4316, -2.9101, -3.9738,
        -5.2047, -4.4829, -4.5057, -3.5661, -3.4543, -5.8199, -4.4801, -7.9297,
        -7.3962, -6.9798, -7.8379, -5.4423, -4.3618, -5.0528, -6.4368, -6.7180,
        -7.9360, -3.4841, -7.5893, -9.5204, -8.4223, -4.3282, -5.6458, -4.2151,
        -6.8803, -2.0000], device='cuda:1', requires_grad=True)

