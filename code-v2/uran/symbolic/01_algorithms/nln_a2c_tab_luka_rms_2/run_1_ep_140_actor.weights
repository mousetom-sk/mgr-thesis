NLStack

NLAndLuka

Parameter containing:
tensor([ 1.7194, -7.1545, -4.4323, -5.7389,  1.8351, -4.5660, -6.0587, -5.4788,
        -5.0310, -4.7334, -3.5715, -4.0539, -6.3840, -4.8714, -3.0478, -3.9300,
        -0.5886, -3.6866, -3.3144, -2.1729, -4.5111, -8.3049,  1.7247, -1.8215,
        -1.3963, -7.2540, -7.1252,  0.7704, -0.3548, -3.6257,  2.3383, -6.0188,
        -5.0833, -2.4620, -1.0451, -7.1336, -6.2834, -5.2959, -4.7507, -5.3042,
        -6.7156, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-2.2014, -3.0303, -1.5608, -1.2676, -0.8884, -0.4191, -2.8789, -1.5264,
        -1.0182, -1.2408, -0.9901, -1.7996, -3.6834, -1.1235, -1.0603, -1.9919,
        -6.3050, -2.7638, -0.4931, -2.4035, -1.5283, -0.2641, -2.7030, -3.7675,
        -5.0901, -1.5076, -7.6803,  2.4559, -2.7419, -0.6023, -6.4421, -2.2742,
        -0.2586, -0.2082, -6.3567, -3.7979, -3.3952,  2.5364, -0.7783, -3.4970,
        -1.9401, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 2.3653,  1.9393,  0.1815,  0.5361,  1.5439,  0.4786,  1.2946,  0.2504,
         2.6067,  2.0243,  0.3963,  0.5533, -0.1675,  1.1717,  2.1659, -0.5459,
        -5.8635,  1.4141,  2.6070,  3.6174,  0.8074,  1.8628,  0.0733,  0.8904,
        -0.5777,  0.1364, -4.4459,  1.2233,  0.2418,  2.0958, -3.7664,  1.8280,
         2.9248,  2.0977, -7.8248, -2.6919,  0.8675,  3.1471,  4.2216, -1.1483,
        -0.2686, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 2.2317,  4.6323,  4.3876,  4.3878,  1.4175,  3.8606,  3.6301,  2.9553,
         3.6748,  4.3021,  3.6142,  3.7794,  1.8639,  4.4906,  4.2428,  2.7718,
        -5.5867,  2.7244,  4.8585,  2.1155,  4.1207,  6.0483,  1.1498,  0.8215,
        -1.0612,  1.6081, -6.8524,  1.9769, -1.1234,  4.6306,  0.5325,  0.5977,
         1.2703,  3.9575, -7.8938, -0.6275,  0.7666,  4.4458,  5.0029,  2.6332,
         3.3662, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.6942,  3.2249, -5.1011, -4.6735,  4.8189, -4.7264, -6.0430, -5.0249,
         3.9237, -4.5966, -4.9813, -5.6653, -6.0005, -3.7592, -4.9119, -2.9858,
        -5.3444, -6.4412, -1.7932,  5.7999, -4.4023,  5.8928, -8.0446,  2.3494,
         0.4380, -7.3029, -6.3137,  4.1990,  2.1501, -6.9631,  2.1863,  0.9569,
         3.8299, -2.8707, -6.3021,  0.1618, -6.4535, -4.4817,  5.4975, -6.0387,
        -6.8497, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 1.2596,  2.8153,  4.7009,  3.2754,  2.6008,  3.0731,  2.5956,  2.9874,
         1.8307,  3.7710,  3.5777,  2.8701,  3.0817,  3.2086,  2.4059,  2.5662,
        -5.0891,  3.0298,  3.4576,  3.3996,  3.1843,  6.6655,  1.3766,  0.2654,
        -0.8956,  1.9499, -5.8534,  2.3594,  0.4855,  4.6068, -2.2714,  0.2168,
         2.9361,  1.4354, -6.6504,  0.2114,  2.4482,  3.8947,  3.9630,  4.4215,
         2.7874, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 2.8086,  5.1404,  4.0763,  5.2717,  2.2621,  5.0398,  4.6802,  5.5123,
         4.1272,  5.2527,  4.3667,  4.7598,  2.0754,  5.4300,  4.3593,  5.3478,
        -3.5235,  4.3531,  2.9368,  2.0370,  5.1851,  5.5910,  2.2312,  0.5110,
        -2.0936,  4.6542, -6.0298,  1.8452,  0.5481,  3.9055,  0.3692,  2.9821,
         1.8034,  4.6706, -6.0862,  0.4216,  0.9437,  5.3240,  2.9356,  3.6867,
         5.3904, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -5.2835,  -7.8511,  -6.0600,  -6.4102,  -8.3336,  -4.6002,  -6.6123,
         -6.8826,  -7.8292,  -6.7003,  -5.7713,  -6.7841,  -7.8988,  -4.6402,
         -5.9843,  -7.2659, -10.3724,  -5.9781,  -4.7837,  -5.7180,  -6.6838,
         -6.8444,  -2.2101,  -5.8571,  -8.0955,  -4.9051,  -8.8190,  -5.2435,
         -5.0806,  -5.3788, -11.1260,  -7.4420,  -3.2862,  -3.8480,  -9.0635,
         -4.9862,  -2.5165,   7.3354,  -6.5468,  -6.9330,  -6.6870,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.0499,  5.9787, -4.5555, -4.6960, -6.0562, -3.9567,  7.0172, -5.3538,
         6.6934, -4.5260, -5.2709, -4.6314,  3.2988, -4.5674, -4.5651, -5.1804,
        -2.4685, -5.6507, -5.4706,  5.1381, -4.1015,  4.7396, -7.5158,  2.5295,
         0.9491,  6.5238, -6.8532, -7.9208,  3.1398, -6.6349,  2.9909,  4.0457,
         3.4001, -6.1010, -3.8889, -0.3531,  3.4916, -5.1489,  5.6802,  6.6447,
        -6.5082, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 3.0218,  2.1374,  1.9471,  1.9094, -0.7452,  2.9664,  1.4336,  3.4369,
         0.9564,  3.4526,  2.4435,  1.7283,  1.0381,  2.4094,  1.6539,  2.3837,
        -6.1528,  0.8671,  4.1966,  1.7623,  2.5774,  2.1541,  0.4159,  1.8663,
        -0.6704,  2.7697, -6.3739,  1.1923, -6.9058,  3.8203, -9.1129, -2.9621,
         2.3207,  1.3296, -6.8139, -2.5456,  0.0458,  4.5025,  2.9802,  0.2878,
         2.3225, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-0.5327,  1.2650,  1.4143,  2.2218,  0.7911,  2.2254,  0.8933,  2.2217,
         2.9435,  1.7454,  1.4290,  1.3196,  0.9686,  2.0882,  1.0654,  1.5333,
        -5.9905,  1.3532,  3.7114,  1.1038,  1.5826,  1.9803, -0.6065,  0.3161,
        -3.1166,  2.5274, -7.3219,  2.0780, -0.4391,  1.3827,  0.1465,  2.2427,
         1.9501,  1.9181, -6.7617, -1.6536,  1.5309,  3.7630,  0.4645,  1.3284,
         3.0019, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 1.6679,  0.8289,  1.0253,  2.2312, -1.7120,  1.7135,  3.3672,  2.6689,
         2.9421,  1.0470,  0.7479,  1.7717,  2.0495,  1.5264,  1.4934,  1.5057,
        -4.5339,  3.9872,  2.2089, -0.4899,  1.4346,  1.9759,  2.5917,  1.4793,
        -2.2284,  4.3693, -6.8147,  1.3011, -2.8333,  0.3014,  2.4385,  2.7529,
         0.8273,  2.4423, -6.5016, -1.3059,  1.2020,  1.1044,  1.0574,  2.4701,
         4.4013, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 3.8096e+00,  4.6331e+00,  2.8693e+00,  3.6061e+00,  3.8241e-01,
         5.3952e+00,  3.6356e+00,  4.9692e+00,  4.0711e+00,  4.4405e+00,
         3.5834e+00,  3.4654e+00,  9.4094e-01,  4.2009e+00,  3.4825e+00,
         5.3784e+00, -4.4545e+00,  3.1599e+00,  2.7256e+00,  3.5970e+00,
         4.3265e+00,  3.4818e+00, -5.2313e-01,  1.0763e+00, -2.5431e-01,
         5.0950e+00, -7.3041e+00,  1.7228e+00,  4.9091e-03,  2.2609e+00,
        -2.4375e+00,  1.4795e+00,  2.5056e+00,  5.3136e+00, -6.0956e+00,
        -9.5915e-01, -2.1099e+00,  6.5624e+00,  4.4905e+00,  3.5751e+00,
         3.5207e+00, -2.0000e+00], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 1.2425,  4.4197,  2.0448,  3.1642,  2.5857,  2.5991,  1.8036,  1.9450,
         4.2286,  2.5331,  2.0827,  2.3032,  1.4286,  2.4558,  3.3125,  1.8365,
        -3.6485,  0.3399,  4.8650,  3.8381,  2.6329,  6.4002, -1.7856,  1.6981,
        -1.3408, -0.4926, -8.2540,  3.1163,  0.9490,  1.8996,  2.0084,  3.5066,
         1.8277,  3.1388, -6.6155, -1.3584,  0.1394,  2.2152,  4.2734,  1.2625,
         2.6302, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.5255, -4.4779, -3.3308, -3.8579, -5.7509, -4.9499, -3.2898, -3.3998,
        -1.0024, -4.2435, -6.2094, -5.0823, -7.4482, -3.8104, -3.3875, -3.6445,
        -3.7706, -3.0435, -6.5137, -5.1657, -4.0993, -3.3806, -1.4746, -6.9538,
        -5.8513, -3.0897, -6.0064, -7.2730, -6.9765, -7.9678, -5.4147, -3.7898,
        -5.5803, -2.4587, -8.6069, -9.7168, -4.6760, -3.6640, -6.5041,  3.4944,
        -4.5086, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.9849, -4.8627, -4.4040, -6.6009, -7.1505, -5.9443, -5.7320, -3.7985,
        -8.3000, -6.0311, -4.9819, -3.9750,  0.7889, -5.8373, -7.5349, -7.2593,
         0.6510, -3.1623, -3.8690, -8.7680, -5.7785, -4.4379, -5.3704, -6.1611,
        -5.0909, -3.8141, -1.5254, -3.5099, -8.5186, -3.2695,  1.3941, -7.7519,
        -7.8411, -9.9620, -6.8317, -0.4554, -1.4713, -6.4393, -5.5720, -5.8726,
         3.8778, -2.0000], device='cuda:0', requires_grad=True)

