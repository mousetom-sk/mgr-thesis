NLStack

NLAndLuka

Parameter containing:
tensor([-4.2469, -4.0889, -3.5526, -3.4271, -5.2622, -3.3653, -3.8002, -3.1738,
        -4.1734, -3.3051, -4.0553, -3.8160, -5.9931, -3.0185, -3.8706, -2.5427,
        -5.6175, -3.1688, -5.5609, -5.2506, -3.2152, -5.0412, -4.1769, -6.7740,
        -6.5033, -4.3152, -5.9887, -5.1306, -7.2305, -4.6044, -7.0723, -5.9825,
        -5.8095, -2.1702, -6.9836, -5.7848, -8.4593, -3.2013, -6.1403, -3.3114,
        -4.1394, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.8196, -4.5215, -4.3635, -3.6455, -4.6604, -3.6671, -4.3440, -4.2151,
        -8.0745, -3.3180, -3.8466, -3.4212, -4.6917, -3.7938, -4.0133, -4.1709,
        -6.5529, -4.4291, -3.6929, -6.3738, -3.8749, -5.2061, -4.6814, -6.5639,
        -7.0545, -4.6441, -6.3591, -4.9565, -6.0884, -2.6786, -9.0016, -8.0847,
        -6.5068, -4.1539, -5.6026, -5.2579, -5.6037, -2.4084, -4.7356, -5.1150,
        -3.3594, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-5.5319, -4.9254, -3.4726, -2.9996, -3.6841, -4.6079, -3.5812, -4.3985,
        -4.3043, -3.2699, -4.2363, -4.7460, -9.0419, -4.0059, -2.9455, -3.3619,
        -4.8276, -4.5767, -6.5735, -4.4167, -3.6253, -3.9784, -3.7006, -9.8035,
        -8.9286, -5.8163, -4.4761, -6.3614, -5.6978, -5.0089, -7.7631, -6.3224,
        -4.0986, -3.1868, -8.8152, -9.1742, -7.6357, -4.4350, -5.1582, -2.8881,
        -4.8886, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.5349, -6.0157, -3.4680, -3.9513, -6.6383, -4.1980, -5.7524, -3.2827,
        -3.7827, -5.6308, -4.6470, -4.6881, -4.9266, -5.1382, -4.2105, -4.8978,
        -4.8767, -4.5874, -5.4960, -8.1512, -4.6008, -3.7431, -3.7392, -9.9635,
        -9.1375, -3.5984, -8.0040, -4.1193, -9.3200, -5.8168, -5.8879, -6.5118,
        -5.2535, -5.0492, -5.5977, -5.7898, -6.7164, -5.9964, -6.2699, -4.7420,
        -2.1294, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-5.4380, -3.4339, -5.3642, -5.0406, -4.7906, -4.8566, -5.4721, -4.5883,
        -6.9714, -5.0236, -5.1574, -5.0056, -5.6645, -4.7125, -5.6406, -3.6658,
        -5.5191, -4.8172, -4.7676, -6.3394, -4.8937, -5.5514, -6.9339, -3.8601,
        -4.8361, -5.2060, -8.1363, -3.0830, -7.7032, -6.0509, -7.0679, -7.9336,
        -7.9080, -3.8851, -6.3480, -3.6370, -8.7593, -4.7882, -4.7859, -5.2102,
        -4.9745, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.6320, -5.1690, -3.3347, -3.1027, -4.5181, -3.4288, -4.6427, -3.4266,
        -5.4026, -3.4160, -3.3043, -4.4414, -6.7887, -3.2822, -3.8860, -3.7794,
        -6.4741, -4.0270, -4.2819, -4.9427, -3.3410, -5.3434, -5.0102, -6.7035,
        -7.6506, -5.0002, -7.1119, -4.7885, -7.5902, -4.0517, -8.9246, -6.6095,
        -3.0686, -4.5122, -7.6442, -6.1739, -6.7709, -3.0683, -5.9579, -5.2330,
        -4.1283, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -4.6337,  -5.7686,  -4.8376,  -5.1365,  -4.3366,  -4.7016,  -6.2616,
         -4.8427, -13.1298,  -3.7739,  -3.4132,  -3.8832,  -4.8032,  -4.8410,
         -5.7438,  -5.8956,  -8.0506,  -6.1520,  -2.8043,  -7.5369,  -4.4727,
         -7.2251,  -6.0578,  -6.8705,  -8.8617,  -8.5859,  -7.5404,  -4.9093,
         -6.7264,  -1.8511, -10.9332, -11.0946, -10.1044,  -7.3544,  -8.7484,
         -6.7835,  -8.5721,  -4.3224,  -5.8811,  -8.5115,  -4.4940,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -4.3845,  -5.8952,  -3.9827,  -4.1851,  -5.4991,  -4.0967,  -5.6088,
         -3.1457,  -9.4953,  -3.9926,  -3.3187,  -4.0538,  -3.4510,  -4.5865,
         -5.0097,  -4.9847,  -6.8417,  -4.3603,  -3.7966,  -7.4970,  -4.1077,
         -6.2191,  -4.0416,  -7.9439,  -6.3710,  -4.6604,  -7.6274,  -4.4137,
         -9.2506,  -3.0827,  -9.0747, -10.7164,  -7.5159,  -6.6033,  -7.5304,
         -5.1641,  -4.6188,  -4.3263,  -5.8538,  -7.3579,  -3.0366,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -7.1982,  -8.2055,  -8.1538,  -9.0810,  -8.7426,  -8.9169,  -5.8936,
         -8.7105, -11.6457,  -7.5966,  -8.2922,  -7.9381,  -8.3088,  -9.1219,
         -7.8529,  -8.9328,  -7.2193,  -8.3933,  -9.3361,  -3.2723,  -8.4217,
        -10.8514,  -8.3237,  -4.7111,  -1.8870,  -8.4664,  -2.3647, -10.3309,
         -1.3519,  -6.8486, -10.5839,  -8.0796,  -9.7856,  -9.8388,  -8.2168,
        -11.4341,  -5.7642,  -8.7458,  -5.0984,  -7.1972,  -8.9497,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-5.4776, -5.6423, -3.5340, -3.1227, -4.0772, -4.4679, -5.0591, -3.8801,
        -4.4294, -4.2181, -3.5198, -5.3901, -7.8675, -2.8456, -4.2870, -4.0305,
        -6.7712, -3.9631, -4.8251, -5.0767, -3.8979, -4.4870, -3.3107, -8.0421,
        -9.4364, -6.1025, -5.9052, -4.5353, -6.2981, -5.6381, -7.1798, -9.3682,
        -2.7869, -3.6272, -9.5867, -5.5887, -6.3282, -3.6284, -5.8440, -5.3353,
        -4.5673, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.6156, -7.4299, -5.1487, -4.8930, -6.7671, -4.2153, -5.2882, -4.6265,
        -3.9085, -4.8059, -5.5554, -5.7119, -7.9829, -5.2057, -4.8029, -4.6993,
        -7.1543, -2.9050, -5.7464, -5.7770, -5.1145, -8.0591, -2.6633, -6.2442,
        -7.2043, -3.7977, -8.8025, -4.7414, -7.5599, -5.9761, -5.8559, -5.6701,
        -3.9529, -4.6678, -7.4829, -7.4400, -7.9356, -3.8710, -8.1139, -4.7730,
        -4.9363, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -3.9870,  -7.3789,  -4.2810,  -4.1724,  -3.2897,  -4.4717,  -8.0541,
         -3.8915, -10.2670,  -3.6901,  -4.3568,  -3.2244,  -8.0272,  -4.9877,
         -4.1023,  -4.2827,  -6.9105,  -4.0418,  -2.9683,  -8.3889,  -4.2878,
         -8.4162,  -4.3217,  -6.7216,  -5.7237,  -9.0641,  -6.0364,  -2.5453,
         -7.5208,  -2.5132,  -9.8779,  -7.7519, -10.0889,  -5.3428,  -6.7029,
         -9.1292,  -7.5049,  -4.6733,  -6.7237,  -8.3973,  -1.9358,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.5502, -3.6501, -3.3146, -2.8089, -4.9990, -3.1952, -4.3106, -3.3795,
        -5.3824, -3.5504, -3.7425, -2.8164, -3.6937, -4.2873, -3.6494, -3.1984,
        -3.8240, -4.0176, -4.4552, -6.2919, -3.0005, -3.9266, -5.3141, -5.4767,
        -7.3349, -5.3284, -6.8471, -4.9708, -8.5596, -3.6608, -6.3896, -8.5012,
        -6.9745, -4.7298, -6.6082, -6.3626, -7.5185, -5.0749, -5.5916, -5.4242,
        -2.5548, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -3.3852,  -5.5182,  -3.9663,  -4.4575,  -7.4694,  -2.2362,  -4.1404,
         -3.8963,  -5.8627,  -4.2424,  -4.0398,  -3.8399,  -4.3933,  -3.6385,
         -4.6996,  -4.0903,  -7.7789,  -3.6418,  -4.7709,  -5.8957,  -3.7602,
         -6.7810,  -4.8655,  -6.4105,  -5.7191,  -2.6353, -10.6239,  -4.9572,
         -6.8060,  -4.6404,  -6.5032,  -7.1385,  -6.2898,  -5.3965,  -6.7616,
         -5.5029,  -6.0191,  -1.7679,  -8.4230,  -5.0114,  -5.0843,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.2260, -2.5777, -3.6572, -4.1934, -4.3796, -3.2194, -4.3704, -3.3452,
        -6.6412, -3.3116, -3.8987, -3.6642, -4.7876, -2.7571, -3.9093, -4.3590,
        -7.2434, -4.2707, -3.5556, -3.6778, -3.3147, -4.7010, -5.7995, -6.0804,
        -4.2972, -4.1947, -5.9357, -4.2140, -7.1410, -5.1202, -8.6460, -7.5575,
        -5.6568, -3.7573, -8.1554, -5.0827, -5.8209, -2.5892, -4.0843, -8.7130,
        -4.5989, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.8039, -3.7921, -3.5795, -2.3845, -4.3392, -3.2920, -2.8781, -3.3223,
        -4.7471, -2.5802, -2.8800, -3.9324, -5.7329, -2.5560, -3.4079, -3.1087,
        -5.2227, -3.8336, -4.1591, -5.4037, -2.6400, -4.5397, -4.2401, -4.8632,
        -7.3991, -5.4104, -4.9781, -5.3362, -7.2313, -3.7153, -8.5685, -7.1429,
        -4.3322, -3.7711, -8.5084, -8.3939, -7.2207, -2.1593, -4.9413, -4.7701,
        -5.2084, -2.0000], device='cuda:0', requires_grad=True)

