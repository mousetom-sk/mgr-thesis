NLStack

NLAndLuka

Parameter containing:
tensor([ 3.7177, -6.2966, -5.1859, -5.1618,  7.2183, -5.3836, -4.8229, -5.6368,
        -5.0725, -4.7360, -3.8147, -4.2664, -5.1054, -5.1876, -3.8837, -3.5992,
         4.0842, -3.4634, -2.9005, -1.9941, -4.4357, -8.2735,  1.4030,  1.5521,
        -0.7302, -7.2016,  6.3059,  1.6888,  2.3564, -3.7268, -0.0380, -7.1043,
        -6.0281, -3.4487, -0.7504, -6.2043, -7.5307, -6.5307, -5.2726, -4.7623,
        -6.1645, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 1.8534,  2.9965,  2.8927,  3.6324,  3.9947,  3.5529,  2.6380,  3.0964,
         4.3069,  3.2814,  4.5119,  2.5502,  1.9135,  2.6495,  4.1842,  2.9122,
         6.9540,  1.2655,  3.6077,  2.9904,  3.4331,  4.4471,  1.1534,  1.3851,
        -2.3286,  2.4378,  5.7570,  0.1177,  1.3661,  3.0398, -0.0289,  0.5736,
         2.9809,  3.1260,  1.0904, -3.2795,  0.3768,  3.6694,  7.2187,  0.8017,
         1.9620, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 0.0369,  2.3219,  0.7002,  1.7359,  2.6472,  2.1659,  2.9262,  0.1872,
         5.0680,  0.8292,  0.5288,  1.0634,  2.0835,  1.0622,  0.9737,  0.4405,
         5.1654,  2.2850,  2.1468,  1.7808,  1.1926,  5.3559,  0.5548,  1.0541,
        -5.0398,  3.6258,  3.4225, -1.4595,  2.8520, -0.6654, -0.2294,  1.0139,
         0.9525,  1.5310,  0.9703, -2.0851,  1.2460,  2.8876,  5.3657,  1.2434,
         0.3908, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 1.7089,  3.8379,  4.7305,  4.6595,  3.1990,  3.6084,  5.1949,  4.4609,
         5.5308,  4.2757,  3.3406,  4.3876, -1.4078,  4.6237,  6.4730,  4.2664,
         5.7598,  2.6966,  0.1909,  1.4857,  4.7288,  4.6328,  1.6786, -0.9889,
        -1.9162,  3.0220,  6.2704, -2.2385,  2.0564,  1.7972, -0.9195,  3.3040,
        -0.9092,  5.8326, -1.1044, -4.3538,  0.9944,  3.2864,  5.1000,  4.9727,
         3.7478, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.0425,  4.6447, -5.6888, -5.0780,  6.6251, -4.7933, -5.9381, -5.7470,
         4.1598, -5.0200, -5.0875, -5.1123, -4.4460, -4.8335, -5.0345, -2.1304,
         1.2247, -6.4271, -0.7785,  4.8394, -4.5827,  6.2271, -7.6947,  2.5549,
        -0.7207, -7.7920,  4.2972,  4.2355,  4.5859, -6.3640,  0.9877,  2.4782,
         4.3369, -2.9605, -1.3789, -1.7884, -7.8904, -5.4729,  6.1993, -5.1389,
        -6.8772, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-0.4125,  1.4442,  2.3876,  2.3882,  5.6660,  1.8721,  1.6897,  1.4928,
         4.3910,  1.4206,  2.2611,  1.9554,  1.1492,  2.1488,  2.0003,  1.4945,
         4.7950,  1.2833,  2.6876,  2.5453,  2.2549,  6.2543, -2.2340, -3.5817,
        -3.1437, -0.3128,  4.4559,  2.4455,  2.4147,  1.1446, -0.2670, -0.0807,
         1.7109,  2.0581, -2.2102, -2.2092,  2.4219,  0.7629,  5.0123,  1.7062,
         0.8954, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 2.7201e+00,  2.8895e+00,  3.8662e+00,  4.0347e+00,  6.4288e+00,
         3.4996e+00,  3.4195e+00,  3.4711e+00,  5.1517e+00,  3.7357e+00,
         3.7984e+00,  3.1907e+00,  5.9636e-03,  4.0659e+00,  4.3684e+00,
         3.5292e+00,  4.9755e+00,  1.4295e+00,  3.9991e+00,  4.0588e+00,
         4.0396e+00,  3.4645e+00,  9.8670e-01, -2.5832e-01, -1.9889e+00,
         1.8630e+00,  5.6726e+00,  2.5145e+00,  1.7108e+00,  2.5528e+00,
         5.0725e-02,  1.1650e+00,  2.8809e+00,  4.2095e+00, -1.0813e+00,
        -2.5024e+00,  1.6946e+00,  3.5213e+00,  3.4963e+00,  2.5749e+00,
         2.1634e+00, -2.0000e+00], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-1.0982,  1.5476,  1.1378,  2.5075,  5.0827,  0.5009, -0.4313,  0.6936,
         5.3482,  0.9851,  0.6093,  0.3286,  0.4598,  0.8695,  2.7066,  0.3577,
         5.7073, -0.0892,  3.9458,  0.5150,  1.0505,  4.0902, -1.2719, -0.4888,
        -4.7208, -1.8447,  5.2503,  1.1782,  1.0636, -0.2688,  0.2797,  1.0325,
         2.6308,  2.2803, -0.2490, -3.5079,  1.5790,  1.8792,  6.2977, -1.1791,
         0.9952, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.5231,  1.8318, -4.6229, -5.1428, -6.3514, -4.6364,  3.4193, -5.1301,
         1.2716, -4.8337, -5.2417, -4.8477, -0.4449, -4.3876, -5.1175, -5.4868,
         2.9500, -6.0195, -5.9752,  0.8037, -4.7166,  3.5153, -7.7898,  0.2580,
        -2.2891,  2.6780,  6.0404, -7.3658,  3.6160, -5.5276,  0.1619,  1.8562,
         0.2148, -5.5929, -1.6903, -2.4318,  4.1889, -4.4729,  3.5548,  4.1121,
        -5.7809, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 0.1234,  2.2721,  1.5849,  2.1187,  6.8664,  1.5543,  0.8226,  1.6425,
         3.4844,  1.4119,  1.5983,  2.4951,  2.1385,  1.4623,  1.9396,  0.7679,
         6.2146,  0.9409,  3.6483, -0.7529,  1.7103,  3.7419, -0.2492, -1.8856,
        -1.4222,  0.5264,  5.3366,  2.8456,  2.1344,  1.9396,  1.1459,  1.0608,
        -0.4677,  1.1911, -0.8422, -0.6459,  1.3461,  1.1361,  2.2645, -0.6768,
         1.9212, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-1.2324,  1.8218, -0.2509,  1.5676,  2.2092, -0.7375, -0.1130,  1.8486,
         3.6632,  1.8890,  1.2196, -0.7810,  0.4202,  0.3125,  1.0023, -1.0012,
         4.8231, -1.4416,  3.1969, -2.1896,  0.2759,  4.9013, -1.2506,  1.1872,
        -4.1994, -0.4809,  6.0057, -0.2212, -1.7157,  3.5736, -1.0313,  0.0961,
         2.6126,  0.7084, -1.7384, -2.6416,  2.2707,  1.4394,  5.6299, -2.1467,
         2.1781, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-2.3583,  0.4738,  2.8985,  2.7380,  4.0323,  0.9703,  0.5404,  0.3274,
         4.6591,  1.1196,  0.5277,  0.6426,  1.6953,  1.1509,  1.0740, -0.2249,
         2.1906,  2.5460,  1.8640,  0.4975,  1.2704,  6.1312,  0.1943, -1.0952,
        -5.0755, -1.2438,  2.5018, -1.4585,  2.2895, -0.7577, -0.3626,  1.1637,
         2.2081,  0.4484, -0.3279, -2.8164,  0.9974,  0.4948,  1.5347,  1.5010,
         1.0777, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 0.6606, -5.5766, -6.2522, -6.1379, -6.6983, -4.3215, -5.1833, -4.5736,
        -8.5763, -3.4591, -5.0456, -4.9969, -7.8851, -4.7989, -5.3117, -3.8184,
        -8.2044, -4.7002, -5.1123, -5.4502, -5.0328, -8.3062, -4.8810, -0.6194,
        -2.6652, -2.7691, -7.2547, -6.6561, -6.4798, -3.3196, -9.5496, -7.8548,
        -7.2381, -3.1505, -7.9725, -6.3078, -9.3378,  2.4443, -5.7234, -4.6643,
        -6.3306, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-0.0409,  4.8461,  4.0281,  5.4191,  7.0266,  3.0506,  3.4817,  3.5566,
         5.0562,  5.5349,  4.3362,  3.3221,  0.9806,  4.1204,  5.4636,  3.8875,
         5.7502, -0.6675,  4.8583,  3.5569,  4.4731,  8.5130, -3.4000, -0.2277,
        -5.1656, -0.3099,  5.9110,  1.6549,  3.2525,  4.9181, -0.2887,  1.2883,
         4.5726,  4.8433, -1.7872, -5.3282,  2.8564,  4.2992,  7.4946,  1.8473,
         3.1023, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -6.5571,  -5.8861,  -1.9978,  -4.4090,  -6.2023,  -4.6907,  -5.1629,
         -2.9069,   0.0571,  -5.3457,  -5.1496,  -6.1936,  -5.5877,  -4.7268,
         -3.9798,  -4.7073,  -2.8257,  -3.0764,  -7.3276,  -5.7061,  -4.7979,
         -2.3348,  -0.7981,  -9.3938,  -6.1163,  -2.2351,  -4.4583,  -4.3502,
        -10.6037,  -7.3423,  -1.7938,  -2.9366,  -1.8512,  -3.5023,  -4.8336,
         -8.4503,  -5.4238,  -5.3841,  -5.7607,   5.0249,  -3.4858,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.5148, -5.1923, -4.6869, -3.7995, -6.6110, -3.7961, -5.6460, -3.9227,
        -6.8278, -5.4148, -4.5657, -2.8554,  3.1996, -5.3237, -5.6911, -5.4906,
        -3.1288, -3.3825, -2.3854, -9.2745, -5.0729, -2.8883, -4.2670, -3.5351,
        -7.8853, -3.3251, -5.4480, -3.6967, -6.1255, -2.4457, -3.1013, -7.1116,
        -6.6213, -6.4757,  0.3692,  0.0784,  0.9658, -4.2173, -5.0823, -5.8050,
         1.2258, -2.0000], device='cuda:0', requires_grad=True)

