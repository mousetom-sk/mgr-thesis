NLStack

NLAndLuka

Parameter containing:
tensor([  7.0687,  -7.1855,  -6.1618,  -5.9862,  12.8836,  -5.2514,  -4.6993,
         -5.4149,  -4.8914,  -5.1629,  -3.9782,  -3.7351,  -5.5643,  -5.0027,
         -4.3443,  -2.6531,   4.5638,  -1.5285,  -3.0131,  -2.2583,  -3.9344,
        -11.6871,   0.7291,   2.1897,  -2.5991,  -7.7421,  12.2561,   9.1739,
          7.2473,  -5.0260,   0.3351, -11.3115,  -8.8400,  -2.7750,  -3.5863,
         -8.3956,  -9.6101,  -7.8645,  -5.9420,  -5.7550,  -7.6730,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 2.9479,  2.6166,  3.3536,  4.9314, 10.6746,  4.9998,  4.0709,  4.3055,
         2.5881,  4.6046,  5.5779,  4.0628,  2.2820,  2.3021,  5.6217,  4.1000,
         6.7806,  1.9395,  4.2938,  1.2392,  5.3601, 11.8926,  0.2133,  2.3397,
        -5.4577,  2.6037, 12.4226,  8.0180,  5.9915,  3.2091, -2.4985, -1.4453,
         0.4864,  3.3237, -0.6817, -6.5923,  0.7146,  2.1415, 13.2971,  0.0427,
         1.7401, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 2.6671,  2.6353,  2.1654,  3.6370, 10.5250,  4.8415,  5.2778,  2.3635,
         4.7872,  2.5746,  2.4541,  3.5237,  2.7902,  2.3401,  2.5789,  2.5781,
         4.8059,  4.4992,  4.5177,  1.8338,  3.9987, 12.5595, -0.0187,  1.8259,
        -6.8281,  5.1287, 11.9200,  7.9478,  7.9407, -0.1427, -1.8124, -0.7522,
        -0.6860,  0.8986, -0.9655, -4.4115,  1.2167,  2.1365, 13.3143,  1.5880,
         1.1883, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 3.9131,  3.3488,  6.1240,  6.3352,  9.4774,  5.7985,  7.4547,  6.8504,
         6.3779,  4.7434,  5.5594,  6.2939,  0.0950,  5.7944,  8.0075,  5.6756,
         6.9567,  4.2952,  1.8336,  1.0803,  7.2737, 11.8972,  1.6889, -0.0259,
        -4.5227,  4.4451, 12.3888,  6.1176,  6.6433,  1.6059, -0.8284,  0.3622,
        -1.6372,  6.2976, -3.7044, -7.0068,  2.2154,  1.7135, 12.5898,  4.5804,
         3.8043, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.2427,  5.6014, -5.4393, -5.9309, 12.7383, -4.2871, -5.7133, -5.6100,
         5.3193, -5.3542, -5.1778, -5.2089, -3.4838, -5.8324, -5.4105, -1.0525,
         1.9187, -6.7034, -1.1495,  6.3832, -4.0368, 11.9362, -9.7381,  3.3762,
        -1.7492, -7.9849, 12.0722, 12.0104,  8.9394, -7.8924,  0.5394,  0.4616,
         3.7552, -4.1002, -3.5670, -2.9851, -9.5391, -7.4901, 12.9226, -4.7612,
        -8.8754, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 4.1456,  2.6101,  4.4107,  5.6466, 12.7480,  6.3153,  6.1467,  5.7627,
         7.1744,  3.8132,  4.7022,  5.9878,  2.5473,  4.8608,  5.5784,  5.1634,
         6.3346,  5.6571,  5.1009,  1.5219,  6.6588, 12.3028, -1.2809, -0.5477,
        -5.2863,  3.9762, 12.2037, 11.0638,  7.7082,  1.3827, -0.3140, -1.0099,
        -0.4825,  2.6221, -4.3610, -4.3186,  3.4063,  1.2762, 13.0201,  2.8872,
         3.6822, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 4.9604,  3.1055,  5.7452,  6.6430, 12.2956,  6.1439,  5.9774,  5.6265,
         5.0058,  5.4829,  5.4234,  5.8546,  0.2992,  5.3365,  7.4915,  5.2278,
         3.9732,  3.5668,  6.8293,  2.6202,  6.7988, 11.6804,  1.4366,  0.7178,
        -5.1417,  3.5056, 12.3099, 10.2252,  6.7220,  3.1192, -2.3425,  0.0342,
         0.3660,  5.9642, -3.2259, -6.1231,  2.6749,  3.2980, 12.5413,  3.0067,
         3.0970, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-2.4483, -0.1984, -1.7050,  3.0494, 12.3122, -0.5119, -1.8056, -0.6729,
         5.4191, -0.5810, -2.1129, -1.1098, -2.0526, -1.1779,  3.5978, -1.4986,
         3.8126, -1.6615,  6.8865, -2.5534,  0.1773, 11.9387, -3.9927,  1.4776,
        -9.8262, -3.8211, 12.2409, 10.2610,  6.4370, -3.8340, -2.0931,  0.5512,
         1.1191,  3.4165, -3.1421, -8.8391,  1.5180, -1.1664, 13.3899, -5.7211,
        -0.2099, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-5.5295,  2.3649, -4.3959, -5.1340, -6.4357, -3.6356,  6.4523, -4.2363,
         1.3514, -4.3727, -4.9619, -4.0988,  1.4916, -4.6285, -4.9729, -4.9777,
         4.0148, -5.1472, -6.4256,  0.9127, -3.6372, 12.1343, -9.0048,  1.9648,
        -3.8663,  5.0289, 12.3678, -8.6545,  8.5808, -6.1768, -1.1513,  0.7135,
        -1.8120, -7.6035, -2.3196, -4.4550,  5.7491, -5.4022, 13.0892,  5.1593,
        -6.5401, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 3.5040,  3.1024,  3.1902,  4.3207, 12.9559,  4.8961,  3.5639,  4.8663,
         2.1759,  4.0667,  3.9657,  5.8957,  3.7065,  2.8443,  4.1415,  3.8300,
         5.5792,  3.8386,  5.0857, -1.4691,  5.1458, 11.9041,  0.3168, -0.2739,
        -3.5131,  2.8595, 12.1724, 10.6363,  7.4367,  3.7839, -1.0658, -1.0675,
        -2.7771,  1.8688, -2.0624, -1.8741,  1.5755,  0.8659, 12.6277, -0.6362,
         3.5348, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 0.8889,  1.9203,  0.8821,  2.1896, 10.6988,  1.3456,  2.0023,  3.7985,
         1.5349,  4.2679,  3.2470,  0.7027,  2.6965,  0.3313,  2.1464,  0.2375,
         4.1839, -0.0223,  4.5595, -2.2489,  2.4854, 12.2208, -2.1255,  2.2918,
        -5.9000,  1.2336, 12.3617,  8.7098,  3.8054,  4.5303, -4.7077, -2.9057,
         2.1402, -0.6288, -1.5775, -4.2184,  2.9573,  0.7503, 13.5077, -2.5282,
         0.9319, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 1.1801,  0.7927,  4.5110,  4.7593, 11.4454,  4.4481,  3.8055,  3.5950,
         6.4406,  3.0637,  2.6811,  3.5580,  3.3576,  3.8329,  3.1020,  1.9297,
         2.2744,  5.7603,  5.0357, -0.7002,  4.8976, 12.3638, -0.5581,  1.0714,
        -7.5893,  1.5383, 11.7434,  6.8440,  7.5870, -0.9321, -0.4573, -0.2166,
         0.5912,  2.6293, -3.5409, -4.5957,  2.3101,  1.3025, 12.4799,  0.9869,
         1.6019, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([  3.4489,  -6.5005,  -5.7311,  -6.1999,  -9.8536,  -3.1940,  -3.7035,
         -3.4310,  -9.1632,  -3.0789,  -4.1803,  -4.4669,  -8.6318,  -4.2308,
         -5.0878,  -2.7131,  -9.3861,  -2.9835,  -7.7708,  -5.6666,  -3.6394,
        -12.0788,  -4.8586,   0.0940,  -4.7919,  -1.5301,  -9.7712, -10.3749,
         -8.8567,  -4.8677, -12.2503, -12.3785,  -8.9006,  -3.4688, -11.7080,
         -9.7612, -12.6834,   2.4860,  -8.6689,  -4.5025,  -7.7640,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -5.2305,   0.5446,  -1.6476,   1.9992,  13.1956,  -2.1039,  -1.8133,
         -2.4840,   0.0395,   1.2116,  -0.1233,  -1.7405,  -4.0409,   0.2420,
          1.0698,  -1.3227,   0.3630,  -6.0904,   3.9322,  -0.8982,  -0.6777,
         12.8105,  -7.5495,  -0.2804, -10.7785,  -6.4348,  12.3479,  10.9241,
          8.3922,   1.6585,  -3.7515,  -3.0336,   1.1350,   4.6770,  -6.5283,
        -10.1908,   1.6517,   1.1077,  13.7717,  -4.1495,  -1.3509,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -7.1773,  -8.3715,  -2.5645,  -6.9016,  -9.5694,  -6.1645,  -7.3719,
         -2.4504,   0.8006,  -7.5141,  -7.7755,  -8.3457,  -8.6590,  -6.7699,
         -4.8729,  -4.8487,  -3.1666,  -2.8454, -10.9439,  -8.8808,  -6.6724,
         -2.4340,  -0.8539, -14.7069,  -8.3757,  -1.3208,  -5.7172,  -4.7450,
        -15.5786, -10.6438,  -2.2450,  -5.3502,  -2.1355,  -2.8479,  -5.7161,
        -12.9095,  -8.6189,  -7.6406,  -8.4269,   5.0538,  -4.0781,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -5.8493,  -6.1516,  -4.9081,  -3.3402,  -8.4733,  -3.4292,  -5.0766,
         -3.2173,  -7.3303,  -5.5775,  -4.7140,  -2.0387,   4.2593,  -5.7428,
         -6.2690,  -6.0742,  -2.7220,  -2.2306,  -2.5402, -11.2354,  -4.9771,
         -3.1633,  -4.9124,  -6.2828, -10.0696,  -3.1736,  -7.3171,  -4.8058,
         -5.5992,  -2.6434,  -3.9945, -11.6148,  -7.9277,  -8.2914,  -1.1030,
         -2.4999,   1.4791,  -5.0240,  -6.9175,  -6.2839,   1.5517,  -2.0000],
       device='cuda:0', requires_grad=True)

