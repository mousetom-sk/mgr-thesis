NLStack

NLAndLuka

Parameter containing:
tensor([ 4.7058, -6.7980, -5.8267, -6.1130, 10.2016, -5.9844, -5.1920, -5.9908,
        -5.6358, -5.1388, -4.0238, -4.6010, -5.8298, -5.4626, -4.2881, -3.3355,
         3.9589, -3.3557, -2.6182, -1.6144, -4.6873, -9.7979,  1.1149,  5.0582,
        -0.7562, -8.0192, 10.1836,  5.8523,  4.0458, -4.1421,  0.8502, -8.6832,
        -6.8361, -2.6772, -1.7946, -6.5061, -8.4627, -7.4984, -5.5951, -4.9692,
        -7.2673, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 1.6615,  3.1716,  3.0941,  3.9508,  6.2706,  3.7373,  2.5173,  3.1550,
         4.1064,  3.4636,  4.6312,  2.5919,  1.8856,  2.6180,  4.7599,  2.8849,
         6.6708,  0.9258,  4.9838,  2.9272,  3.6998,  8.3204,  0.6053,  4.9751,
        -2.8101,  1.9628, 10.3518,  2.5447,  3.0733,  2.8550, -0.0607,  0.9041,
         3.6150,  5.1789,  0.4001, -3.9357,  1.2806,  3.4714, 11.2054,  0.2740,
         1.4630, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 0.6506,  2.4770,  1.2910,  2.3502,  6.1176,  2.7912,  3.4960,  0.7221,
         4.8568,  1.6279,  1.1983,  1.7456,  2.3083,  1.6786,  1.5953,  0.9079,
         4.9207,  2.7811,  4.1984,  2.0753,  1.8948, 10.6055,  0.3632,  3.0989,
        -5.2196,  3.8922,  8.6147,  3.0597,  4.6118,  0.0972, -0.1544,  1.2035,
         1.4937,  2.5221,  0.3112, -2.4193,  2.4507,  3.5081, 10.3707,  1.4983,
         0.6136, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 1.6666,  4.3063,  4.8373,  4.5554,  4.4362,  3.5255,  5.1915,  4.6553,
         5.2176,  4.5282,  3.5613,  4.5813, -1.2332,  4.8833,  6.5851,  4.0380,
         5.3812,  2.1502,  1.8044,  1.6456,  4.9410,  8.1575,  0.7592,  2.1310,
        -1.9805,  2.3879, 10.0770,  0.8318,  3.2739,  1.9933, -0.4349,  3.6578,
        -0.3356,  6.9975, -2.4339, -4.9168,  2.3227,  3.1120,  9.2234,  4.1372,
         3.0857, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.2442,  5.0894, -5.7841, -5.8122,  9.0000, -4.9027, -6.0569, -5.9495,
         4.4444, -5.2218, -5.3013, -5.1990, -4.4123, -5.3341, -5.5340, -1.8935,
         1.1678, -6.6655, -1.0931,  5.4918, -4.6706,  9.7937, -8.6088,  5.7962,
        -0.7008, -8.0471,  9.3072,  8.3625,  5.7366, -6.6939,  1.3978,  3.0646,
         5.0361, -3.1032, -1.5363, -1.9571, -8.7090, -6.1256, 10.2203, -4.9433,
        -7.7549, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 1.2529,  2.6339,  3.7655,  3.3572,  8.3190,  3.4359,  3.4527,  2.9886,
         5.5093,  2.7515,  3.4739,  3.5206,  2.3724,  3.6795,  3.2704,  2.7404,
         5.3361,  2.8656,  4.8695,  3.4884,  3.8606, 10.3678, -1.8756,  1.0904,
        -2.5506,  1.2253,  9.4618,  6.0208,  4.1034,  1.9707,  0.6940,  0.6413,
         2.2892,  3.2563, -2.7839, -2.0112,  4.1130,  1.9096,  9.9704,  2.7448,
         1.7244, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 3.3497,  3.5685,  4.5684,  4.9453,  9.4198,  4.2753,  4.1307,  4.0581,
         4.4628,  4.7466,  4.6166,  3.8963,  0.8085,  4.6291,  5.2280,  4.1396,
         4.5066,  1.8737,  6.3003,  4.6975,  4.8933,  6.7661,  0.8829,  2.2728,
        -2.1923,  2.0732, 10.3002,  5.7657,  3.5670,  3.3902, -0.3807,  0.7683,
         3.7502,  5.4301, -1.3605, -2.7868,  3.1809,  4.1360,  7.9751,  2.6363,
         1.9062, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-2.2474,  0.9095,  0.0780,  2.8884,  8.4014, -0.4886, -1.4528, -0.6021,
         4.5529,  0.0713, -0.4457, -0.5852, -0.6326,  0.2295,  3.2437, -0.8684,
         4.9841, -1.3432,  6.4991, -0.1695,  0.1344,  7.9626, -2.0696,  2.2185,
        -6.2951, -3.2919, 10.0297,  5.8284,  2.8616, -1.3407,  0.1341,  1.0177,
         3.2660,  4.1445, -0.7415, -5.1814,  2.7547,  1.1026, 11.2440, -2.6407,
         0.2669, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.6254,  2.2014, -4.7425, -5.3489, -5.1957, -4.7129,  4.0844, -5.3010,
         1.0937, -4.8571, -5.3322, -4.9807,  0.1965, -4.7678, -5.2446, -5.6738,
         3.2269, -6.2002, -5.5684,  1.3725, -4.7380,  9.3597, -8.3743,  3.6983,
        -2.4319,  2.8666, 10.5192, -7.0475,  5.2964, -5.7331,  0.0652,  2.0374,
         1.1593, -6.3433, -1.4996, -2.6819,  5.4412, -4.9132, 10.1376,  4.2625,
        -6.4473, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ 1.2717,  2.9177,  2.3308,  3.2222,  9.6435,  2.6788,  1.5804,  2.7207,
         3.4079,  2.3882,  2.7012,  3.5653,  2.8794,  1.9117,  3.0944,  1.7852,
         6.5630,  1.6526,  5.8469, -0.7234,  2.8796,  8.6364,  0.3872,  1.5469,
        -1.8269,  1.0556, 10.0867,  5.8061,  3.8266,  2.7696,  1.3802,  1.1531,
         0.1148,  2.8443, -0.1623, -0.9807,  2.6246,  1.3075,  7.4657, -0.8103,
         2.4469, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-0.4553,  2.1399,  0.4575,  2.4122,  5.6063,  0.0130,  0.6917,  2.5155,
         3.8392,  2.8488,  2.0334, -0.1068,  1.3514,  0.6056,  2.1240, -0.3677,
         5.1794, -0.8419,  5.6071, -1.7849,  1.1265, 10.3380, -1.0484,  4.7508,
        -4.2678,  0.0259, 10.4993,  4.0766,  0.1466,  4.2605, -1.1035,  0.4251,
         3.5716,  3.3263, -0.9926, -2.8024,  3.7830,  1.5654, 11.5084, -1.7195,
         2.2716, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-2.0959,  0.8405,  3.1266,  2.5630,  6.7817,  1.1813,  0.8041,  0.3570,
         4.9518,  1.1469,  0.6762,  1.0131,  1.7163,  1.7647,  1.2406, -0.4285,
         1.4555,  2.5272,  3.8458,  0.8097,  1.5748, 10.1059, -0.6568,  2.4771,
        -5.1498, -1.3161,  7.7884,  1.8148,  3.9797, -0.8117,  0.6427,  1.5625,
         2.5375,  2.8519, -1.9637, -3.1051,  2.4745,  0.7113,  6.6217,  1.1155,
         0.3484, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([  0.9402,  -5.9891,  -6.2359,  -6.4044,  -7.3093,  -5.0119,  -5.0675,
         -4.4977,  -9.1745,  -3.3061,  -4.9887,  -5.6267,  -8.6946,  -5.0313,
         -5.4460,  -3.8886,  -8.6686,  -4.9303,  -6.1373,  -5.5481,  -5.0062,
         -9.1196,  -5.0304,   1.9945,  -2.6935,  -3.0310,  -7.5314,  -7.9738,
         -7.5866,  -3.5288, -11.2947, -10.5906,  -7.5085,  -3.5122,  -9.6939,
         -7.4156,  -9.9411,   2.7244,  -6.2771,  -4.6235,  -7.4021,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-1.0510,  4.0147,  2.7701,  5.1484, 10.0603,  1.9963,  2.4746,  1.8117,
         4.2650,  4.7206,  3.2603,  2.6100,  0.0629,  3.3675,  5.2032,  2.2421,
         4.5536, -1.7911,  6.9497,  2.5561,  3.4947, 11.9511, -4.2618,  3.4001,
        -6.6460, -2.0957, 10.4440,  6.2714,  4.8725,  4.2682, -0.1140,  1.3026,
         4.7854,  7.5376, -2.9133, -6.6825,  3.8119,  3.5372, 12.3391, -0.0844,
         2.2386, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-7.0144e+00, -6.7135e+00, -2.5435e+00, -5.5265e+00, -7.3370e+00,
        -5.3878e+00, -6.6346e+00, -2.7972e+00, -4.8769e-03, -6.2338e+00,
        -6.1585e+00, -7.0964e+00, -6.9199e+00, -5.8683e+00, -4.8108e+00,
        -4.6734e+00, -2.8092e+00, -3.3202e+00, -8.6220e+00, -6.9916e+00,
        -5.6890e+00, -2.4451e+00, -8.5178e-01, -1.1345e+01, -6.5326e+00,
        -2.1454e+00, -5.2812e+00, -4.2055e+00, -1.2796e+01, -8.3619e+00,
        -1.3154e+00, -3.7788e+00, -1.2217e+00, -3.7582e+00, -4.2158e+00,
        -1.0680e+01, -6.9324e+00, -6.3963e+00, -6.6312e+00,  4.3452e+00,
        -3.4328e+00, -2.0000e+00], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.2385, -5.5984, -4.8025, -3.8693, -7.1618, -3.6335, -5.7092, -3.8095,
        -7.2237, -5.5379, -4.4745, -2.6097,  3.5979, -5.6067, -5.9374, -5.8327,
        -3.1502, -3.6749, -2.1971, -9.8407, -5.2055, -3.2431, -4.1281, -3.6637,
        -8.3081, -3.7952, -5.9222, -4.0072, -5.6186, -2.0082, -3.1933, -8.6074,
        -7.1739, -7.0834,  0.3145, -0.7082,  2.2916, -4.2717, -5.6354, -6.1128,
         1.4484, -2.0000], device='cuda:0', requires_grad=True)

