NLStack

NLAndLuka

Parameter containing:
tensor([-4.1333, -4.1726, -3.6626, -3.6173, -5.3050, -3.4572, -3.9923, -3.2358,
        -4.3916, -3.4368, -4.1629, -3.9322, -6.0493, -3.0747, -3.9616, -2.6764,
        -5.6814, -3.1765, -5.4908, -5.3107, -3.3113, -5.2450, -4.2116, -6.7276,
        -6.7111, -4.4363, -6.4008, -5.1366, -7.5137, -4.7938, -7.2207, -5.8689,
        -6.2359, -2.3783, -7.0682, -6.1504, -8.4177, -3.2281, -6.2301, -3.6132,
        -4.2601, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-5.0611, -4.4077, -4.4755, -3.8396, -4.8445, -3.7979, -4.4620, -4.2688,
        -7.7319, -3.5189, -3.9905, -3.6506, -4.5261, -3.9942, -4.1489, -4.3361,
        -6.3260, -4.7006, -3.7825, -6.3224, -3.9894, -5.1803, -5.0283, -6.5827,
        -7.0551, -4.7530, -6.7647, -4.9095, -6.2630, -3.0630, -8.8161, -8.0403,
        -6.4446, -4.4792, -5.4514, -5.4249, -5.5387, -2.7301, -4.6929, -5.4222,
        -3.6773, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-5.5553, -4.8222, -3.7573, -3.4095, -3.6863, -4.7824, -3.7754, -4.5784,
        -4.3196, -3.4097, -4.4461, -4.9126, -8.4079, -4.2566, -3.2207, -3.6698,
        -4.7967, -4.7557, -6.2917, -4.3506, -3.8217, -4.5679, -3.9868, -9.5220,
        -8.7233, -5.9482, -4.7465, -6.2978, -5.9615, -5.1326, -7.8094, -6.2476,
        -4.6310, -3.6421, -8.6033, -8.9809, -7.2337, -4.6100, -5.2311, -3.4315,
        -5.2379, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.5415, -5.5482, -3.7941, -4.1648, -6.4490, -4.3708, -5.4307, -3.7519,
        -4.0007, -5.6721, -4.6827, -4.7512, -4.5096, -5.2761, -4.3588, -5.0510,
        -4.5289, -5.0644, -5.4546, -7.3500, -4.7277, -3.9012, -4.1711, -9.2766,
        -8.6351, -3.8817, -7.7836, -4.4543, -8.5957, -5.6903, -5.7874, -6.6701,
        -5.6196, -5.2367, -5.4954, -5.9360, -6.3200, -6.0953, -5.6341, -4.8206,
        -2.6590, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-5.2244, -3.3438, -5.1135, -4.8260, -4.9095, -4.6561, -4.9756, -4.4104,
        -5.8610, -4.8101, -4.9383, -4.7855, -6.0837, -4.4305, -5.3872, -3.4540,
        -5.6429, -4.6113, -5.1272, -5.3684, -4.6673, -5.2161, -6.7080, -4.2672,
        -4.5776, -4.8058, -7.6924, -3.4035, -6.8149, -5.8510, -6.3759, -7.3502,
        -7.6428, -3.5900, -7.1394, -3.9453, -8.3376, -4.5446, -4.5343, -4.7676,
        -4.8150, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.6033, -5.2762, -3.4176, -3.0392, -4.2257, -3.4791, -4.7369, -3.7107,
        -5.4485, -3.4971, -3.2610, -4.4241, -6.5622, -3.3254, -3.8980, -3.9569,
        -6.2772, -4.0747, -3.9584, -5.0623, -3.3587, -5.4648, -4.9929, -6.6829,
        -7.9830, -5.4284, -7.2213, -4.7315, -7.5623, -4.0355, -8.7394, -6.7465,
        -5.8492, -4.7219, -7.8249, -6.6374, -6.3859, -3.2478, -5.9730, -5.6084,
        -4.2645, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -4.5615,  -5.6741,  -5.0083,  -5.5453,  -4.8519,  -4.8468,  -6.2030,
         -4.9217, -12.3715,  -4.0814,  -3.7855,  -4.0518,  -4.9308,  -4.9476,
         -5.7577,  -6.0420,  -7.7267,  -6.2772,  -3.1681,  -7.2392,  -4.6405,
         -7.4633,  -6.2461,  -6.8835,  -8.3551,  -8.4060,  -7.6955,  -5.3159,
         -6.7970,  -2.3816, -10.3378, -10.4796, -10.3505,  -7.2786,  -8.8379,
         -7.1989,  -8.3519,  -4.5472,  -5.9316,  -8.4332,  -4.8304,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -4.8489,  -5.4746,  -4.2184,  -4.3579,  -5.3237,  -4.4855,  -5.6867,
         -3.5206,  -8.9509,  -4.2071,  -3.6067,  -4.2598,  -3.6100,  -4.7889,
         -5.1390,  -5.1471,  -6.4277,  -4.8124,  -4.0375,  -7.2423,  -4.3090,
         -5.7386,  -4.5788,  -7.7724,  -6.4642,  -5.1671,  -7.1044,  -4.7568,
         -8.8595,  -3.3898,  -9.0211, -10.3160,  -7.4241,  -6.6836,  -7.5717,
         -5.1498,  -4.5906,  -4.7341,  -5.4579,  -7.3912,  -3.4177,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -6.9494,  -8.3734,  -7.7896,  -8.7262,  -8.0705,  -8.5240,  -6.4451,
         -8.3405, -10.8150,  -7.3233,  -7.9989,  -7.6281,  -7.2941,  -8.8919,
         -7.5969,  -8.6306,  -6.7876,  -7.9741,  -8.5501,  -4.4166,  -8.1050,
        -10.4472,  -7.9866,  -5.4293,  -2.2621,  -8.7210,  -3.5200,  -9.5020,
         -2.6409,  -6.6060,  -9.9799,  -7.5189,  -9.7761,  -9.6885,  -7.1809,
        -10.9086,  -5.4767,  -8.4809,  -5.9422,  -7.6015,  -8.5486,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-5.6060, -5.5329, -3.8149, -3.2857, -4.2506, -4.5494, -5.2368, -3.9209,
        -4.3765, -4.3931, -3.6110, -5.5170, -7.4970, -3.0518, -4.4269, -4.3391,
        -6.4857, -4.3509, -4.5549, -5.1948, -4.0469, -4.4369, -3.7044, -7.8490,
        -9.3137, -6.0643, -6.0164, -4.5715, -6.7524, -5.7193, -7.0020, -9.4626,
        -2.9405, -3.9994, -9.5825, -5.8768, -6.1148, -3.7895, -5.6240, -5.8676,
        -4.5691, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.7043, -6.5672, -4.8643, -4.5452, -6.1250, -4.0564, -5.0778, -4.2749,
        -4.0573, -4.3197, -5.1536, -5.3151, -7.1747, -4.9495, -4.4910, -4.4616,
        -6.5021, -3.1997, -5.0861, -5.4280, -4.7394, -7.2255, -3.0837, -5.9528,
        -6.8822, -3.9063, -8.1775, -4.3539, -7.4741, -5.4401, -6.1157, -5.5623,
        -4.3806, -4.6483, -7.0955, -7.1164, -7.3672, -3.7287, -7.2451, -5.0257,
        -4.5744, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -4.6240,  -7.6020,  -4.8898,  -4.7531,  -3.8688,  -4.9994,  -8.7812,
         -4.2213,  -9.7208,  -4.4443,  -5.1401,  -3.9373,  -8.0071,  -5.6609,
         -4.7412,  -4.9009,  -6.8107,  -4.4284,  -3.0354,  -8.9307,  -4.9423,
         -8.5014,  -4.8062,  -6.8810,  -5.9623,  -9.2541,  -6.3958,  -2.4750,
         -8.2075,  -3.4633,  -9.5645,  -7.4041, -10.0443,  -5.9561,  -6.8979,
         -9.4786,  -7.3856,  -5.3148,  -7.1918,  -9.0423,  -2.2167,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.6189, -3.6011, -3.3428, -3.0328, -5.1443, -3.2249, -4.3155, -3.3758,
        -5.4391, -3.6386, -3.7788, -2.8382, -3.6015, -4.3386, -3.7605, -3.3716,
        -3.9066, -4.1597, -4.3248, -6.2494, -3.0301, -4.0707, -5.5914, -5.6425,
        -7.2452, -5.2681, -7.0232, -5.0434, -8.6931, -3.8624, -6.3201, -8.4864,
        -7.4084, -5.1107, -6.5988, -6.6697, -7.3901, -5.2360, -5.6133, -5.5497,
        -2.8001, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -3.7048,  -5.4793,  -4.3773,  -4.7217,  -7.2236,  -2.7037,  -4.5536,
         -4.2320,  -6.3372,  -4.3860,  -4.1851,  -4.1764,  -4.6968,  -3.9045,
         -5.0391,  -4.2799,  -7.9313,  -4.1571,  -4.7375,  -5.9605,  -4.0968,
         -6.8007,  -5.2022,  -6.1885,  -5.8982,  -3.1679, -10.6032,  -4.8504,
         -7.1871,  -4.5600,  -6.7322,  -7.4009,  -7.0815,  -5.5060,  -6.6949,
         -5.4854,  -6.3021,  -1.9939,  -8.0537,  -5.3288,  -5.3451,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.2166, -3.0920, -3.5845, -4.1141, -4.2975, -3.1525, -4.2520, -3.5204,
        -7.2964, -3.2615, -3.8448, -3.5556, -4.4958, -2.8845, -3.8595, -4.3311,
        -7.1135, -4.2272, -3.4812, -3.9494, -3.2439, -5.3758, -5.7776, -6.1486,
        -4.5252, -4.4109, -6.3494, -4.2485, -7.0574, -5.0494, -8.8523, -7.6581,
        -7.7313, -3.9774, -7.8234, -5.4746, -5.3931, -2.7579, -4.7464, -8.6411,
        -4.7236, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.0047, -4.0935, -3.8205, -2.5458, -4.5029, -3.5122, -3.0433, -3.7322,
        -4.8558, -2.9348, -3.1390, -4.1604, -5.7556, -2.8005, -3.6491, -3.3558,
        -5.3574, -3.9295, -4.3250, -5.5200, -2.8822, -5.0221, -4.3468, -4.8868,
        -7.5276, -5.7003, -5.3036, -5.5407, -7.2685, -4.0481, -8.6776, -7.0265,
        -6.3100, -4.0195, -8.4954, -8.4504, -7.1817, -2.5336, -5.3414, -4.9660,
        -5.4469, -2.0000], device='cuda:0', requires_grad=True)

