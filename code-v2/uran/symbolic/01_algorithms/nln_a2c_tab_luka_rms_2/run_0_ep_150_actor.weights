NLStack

NLAndLuka

Parameter containing:
tensor([-3.5675, -2.3311, -2.1716, -2.3891, -2.4012, -2.3448, -2.8718, -2.1399,
        -2.5342, -2.2075, -2.9161, -2.6382, -5.4653, -1.7244, -2.6999, -1.3792,
        -4.1547, -2.5547, -4.7643, -2.9298, -2.0339, -2.1349, -3.5293, -6.6603,
        -5.2703, -3.7472, -3.1177, -4.2666, -3.1244, -3.5466, -6.0698, -5.5404,
        -4.9130, -0.3077, -6.8354, -5.0482, -7.8809, -2.0473, -4.3556, -1.2649,
        -3.2723, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.7208, -2.5195, -3.5393, -2.9240, -2.5082, -3.2432, -3.8352, -3.8705,
        -7.9875, -1.6579, -3.2483, -2.5108, -3.7936, -3.1573, -3.2704, -3.5991,
        -6.1919, -3.8416, -2.6701, -4.8020, -3.2061, -3.0552, -4.3253, -6.0348,
        -6.0146, -4.9113, -3.5934, -3.9870, -3.4835, -1.1026, -8.8446, -6.6474,
        -4.5930, -3.5468, -5.0579, -3.3864, -4.7909, -1.4565, -2.8940, -4.5721,
        -2.8585, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.8560, -3.7838, -2.6294, -2.0653, -2.6121, -3.7497, -3.0161, -3.5989,
        -1.6585, -2.4111, -3.3347, -3.9318, -8.9692, -3.0691, -2.0960, -2.3000,
        -3.0727, -3.8664, -5.8814, -3.3806, -2.7233, -1.8008, -3.0129, -8.7895,
        -8.3761, -5.4624, -1.4192, -5.5951, -1.1218, -4.2178, -5.8449, -4.8433,
        -3.3239, -2.1150, -8.7376, -8.7485, -7.5794, -3.5363, -3.9492, -2.1908,
        -4.1642, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -7.6532,  -7.1197,  -3.8552,  -2.8104,  -6.5321,  -4.6381,  -6.4466,
         -3.6703,  -2.7252,  -6.0225,  -5.0698,  -5.4542,  -4.9558,  -5.9007,
         -4.7181,  -5.2005,  -4.2928,  -3.9941,  -5.7129,  -9.5420,  -5.0248,
         -2.8361,  -3.1472,  -9.8650, -11.0830,  -4.2382,  -7.3240,  -3.8715,
         -9.1369,  -6.5537,  -5.5755,  -4.6634,  -4.0462,  -5.7713,  -4.7941,
         -5.5865,  -7.0911,  -6.7378,  -7.4347,  -5.1495,  -1.2837,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.1152, -1.3852, -6.0104, -5.7663, -4.2294, -5.3402, -6.9317, -5.1356,
        -8.6353, -5.5650, -5.7293, -5.5504, -5.7673, -5.4217, -6.3537, -3.4945,
        -5.1260, -5.5807, -4.4712, -5.6992, -5.4703, -4.9865, -7.8281, -3.1086,
        -3.2271, -6.5262, -8.9211, -2.1311, -8.1500, -6.5555, -8.0522, -7.4076,
        -8.9425, -4.1466, -4.7227, -2.2974, -9.5499, -5.3701, -3.3742, -6.0160,
        -5.6396, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.1900, -1.6257, -1.7555, -1.6809, -2.8447, -2.0892, -2.7155, -1.8928,
        -2.5773, -1.6751, -1.5682, -2.5665, -6.4936, -1.4556, -2.0374, -2.0825,
        -4.2427, -3.1724, -3.1029, -2.0685, -1.5029, -2.7900, -4.2447, -5.2247,
        -6.5442, -4.2688, -4.8467, -4.1489, -5.8759, -2.3748, -8.6829, -5.5744,
        -1.1811, -2.8184, -7.5696, -5.5122, -6.5587, -1.8579, -2.5407, -3.4849,
        -2.8983, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -4.6639,  -6.3245,  -4.5418,  -4.7237,  -3.1963,  -4.7980,  -6.1584,
         -4.9583, -14.2937,  -3.4538,  -3.0100,  -3.5480,  -5.1390,  -4.8010,
         -5.4024,  -5.7902,  -8.0368,  -6.2040,  -2.7131,  -8.0143,  -4.3379,
         -7.0998,  -5.5162,  -6.7880,  -9.2294,  -9.1114,  -6.3019,  -4.2993,
         -2.8068,  -1.0124, -11.5676, -11.5343, -10.6091,  -7.1198,  -7.7619,
         -7.3173,  -8.5264,  -4.3470,  -5.6070,  -8.2783,  -4.1872,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -3.7995,  -6.5199,  -3.5092,  -4.2203,  -5.8687,  -3.4568,  -5.8185,
         -2.7285, -10.2372,  -3.7252,  -3.0621,  -3.7168,  -2.8982,  -4.3971,
         -4.8394,  -4.9447,  -7.4098,  -3.8444,  -3.5238,  -7.6654,  -3.8949,
         -6.4716,  -3.4982,  -8.4848,  -5.7501,  -4.1871,  -8.3198,  -3.9278,
         -9.1781,  -2.6426,  -8.3308, -10.7900,  -7.7714,  -6.6317,  -7.0162,
         -4.6787,  -3.9638,  -3.6442,  -6.2879,  -7.4811,  -2.7541,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -7.2135,  -8.9951,  -8.3771,  -9.3482,  -9.9829,  -9.2076,  -4.4708,
         -8.9580, -13.0925,  -7.7395,  -8.4700,  -8.0688,  -8.4674,  -9.1916,
         -7.9435,  -9.9259,  -8.9139,  -8.6356,  -9.9423,  -2.4443,  -8.6401,
        -12.1292,  -8.3926,  -4.8696,  -0.5210,  -7.2159,  -0.0526, -11.7350,
          1.1157,  -6.8578, -11.0602,  -8.7135, -10.5234, -10.5284, -10.4034,
        -12.9401,  -4.9205,  -8.8137,  -4.9145,  -6.7945,  -9.1593,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.9630, -5.6015, -2.8751, -2.1775, -3.2588, -3.9073, -4.4647, -3.4272,
        -3.1368, -3.5732, -2.9452, -4.8246, -7.9912, -2.1168, -3.5127, -3.5393,
        -6.4432, -3.4345, -4.4046, -4.4388, -3.2710, -2.9153, -2.7775, -6.9434,
        -9.5669, -5.8963, -4.2481, -4.2080, -1.1329, -5.1113, -5.1262, -6.9218,
        -2.0762, -2.8217, -9.3556, -5.3977, -5.8377, -2.9567, -5.5344, -4.6520,
        -3.9945, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.0565, -8.5197, -5.1216, -4.5661, -7.5877, -3.8613, -4.7362, -4.3724,
        -2.5120, -4.9859, -5.6804, -5.8249, -9.3318, -4.9918, -4.5693, -4.4264,
        -7.5975, -2.0349, -6.1038, -6.3876, -4.9912, -9.0200, -1.8702, -5.9020,
        -7.7996, -2.3546, -9.8106, -4.9560, -7.6893, -6.6819, -3.8026, -4.7144,
        -3.5353, -4.1821, -7.9795, -8.4172, -8.3065, -3.7315, -9.7668, -4.0791,
        -4.7057, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -3.8864,  -8.3604,  -4.8359,  -4.8709,  -0.5678,  -5.2048,  -8.6490,
         -4.9359, -11.9744,  -4.1358,  -4.6122,  -3.0497,  -9.2896,  -5.2534,
         -4.1266,  -4.8973,  -6.8805,  -4.9836,  -3.0074,  -8.6347,  -4.8376,
         -9.4982,  -4.3084,  -6.1875,  -5.8063, -10.3937,  -4.0289,  -1.6450,
         -3.4292,  -1.7264,  -9.2634,  -8.5495, -11.3780,  -5.0488,  -6.9372,
         -9.5877,  -7.6747,  -5.0179,  -6.5599,  -9.0546,  -2.3846,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.5423, -3.3306, -2.7394, -1.9068, -4.4898, -3.1051, -3.7367, -3.0365,
        -4.4776, -3.2750, -3.3610, -2.5863, -3.1510, -3.9172, -3.1388, -3.0371,
        -1.7935, -3.6650, -4.1328, -6.1163, -2.6216, -1.4782, -4.6480, -4.3984,
        -6.8327, -5.2519, -5.3058, -4.4591, -6.9905, -3.5663, -4.3238, -6.6094,
        -5.7948, -4.4594, -5.6329, -6.1741, -6.9113, -5.1340, -5.0579, -4.9608,
        -1.9284, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-2.3352, -3.9624, -2.8060, -3.6959, -5.8176, -1.5757, -3.2643, -3.0376,
        -5.5520, -2.6930, -3.0481, -2.6236, -4.3623, -2.5700, -3.6163, -2.3757,
        -7.0672, -3.4094, -4.4216, -2.3230, -2.7707, -5.4646, -4.2931, -5.5711,
        -3.1280, -2.4678, -9.6138, -4.0735, -2.9768, -2.8694, -6.0319, -7.5738,
        -4.7779, -3.2919, -6.1976, -5.1721, -5.6565, -0.2527, -6.7084, -3.3360,
        -4.2993, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.5637, -1.1643, -2.9909, -3.3094, -3.7882, -2.5660, -3.6425, -2.5910,
        -4.9277, -2.5802, -2.9987, -2.8880, -4.2646, -2.0548, -3.1777, -3.7442,
        -6.3173, -3.7565, -2.7911, -2.0138, -2.5356, -2.0945, -5.2960, -4.5671,
        -3.5858, -3.9744, -5.0170, -3.6184, -4.2936, -4.2696, -6.1359, -7.6682,
        -3.3638, -3.3674, -7.2169, -3.6475, -5.8661, -2.1056, -1.9264, -8.4644,
        -3.6731, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-2.7432, -0.3471, -2.2473, -0.8255, -3.1650, -2.0881, -1.1452, -2.0852,
        -1.1190, -0.7614, -1.4552, -2.5013, -5.3203, -1.1478, -1.9604, -1.7708,
        -2.4918, -3.0466, -3.2803, -2.5110, -1.1844, -0.7925, -3.4617, -3.0633,
        -6.7871, -4.8109, -2.2323, -4.7733, -3.9200, -1.8866, -8.4371, -6.5996,
        -2.3216, -2.4961, -8.3601, -8.4284, -7.0503, -0.8153, -1.4003, -3.0402,
        -4.0204, -2.0000], device='cuda:0', requires_grad=True)

