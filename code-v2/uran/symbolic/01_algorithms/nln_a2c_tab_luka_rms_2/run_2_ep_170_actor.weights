NLStack

NLAndLuka

Parameter containing:
tensor([ -0.2518,  -6.4902,  -4.8877,  -5.9696,   5.0127,  -4.9727,  -4.5891,
         -5.3263,  -4.9015,  -4.8622,  -3.6456,  -3.8876,  -7.1087,  -4.2689,
         -3.0424,  -4.8277,   6.5749,  -6.1897,  -4.2780,  -1.4190,  -4.4077,
         -9.1819,   1.9137,  -6.9845,  -2.6178,  -6.8381,   4.4131,  -0.7521,
          4.4706,  -3.8824,   4.7755,  -6.8202,  -4.9127,  -3.3224,   3.4441,
        -10.3149,  -4.1845,  -5.4619,  -4.4910,  -5.8055,  -8.0554,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.8052, -0.2705,  3.2713,  0.6071,  2.7124,  0.2803,  0.5106,  1.0598,
         4.7301, -0.2510, -0.2757, -0.6174, -3.9547,  0.9365,  0.4119,  0.0953,
         6.9781,  0.0263, -5.6017, -0.2576,  0.6478,  9.7943,  1.9748, -8.1205,
        -6.3512,  0.6804,  2.0993, -4.9248,  1.7333, -3.0982,  4.7587,  1.2385,
         1.5984,  0.0943,  1.0655, -6.0517, -3.6185, -0.0996, -2.1593,  6.6551,
         0.8064, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.9337, -2.1719,  1.8818, -1.6011,  2.3897, -1.8687, -0.0845, -1.6342,
         1.3991, -1.5124, -1.8882, -1.8005, -2.7475, -1.0843, -1.3180, -2.1615,
         5.8699, -1.5815, -6.2046, -1.5289, -1.4313, 11.6548,  2.4423, -8.6977,
        -7.4976,  0.3240,  2.5219, -3.0231,  2.5151, -2.6615,  2.5360, -1.2119,
         1.7938, -1.5619,  3.7838, -6.9765, -2.1925, -0.6232, -2.6681,  5.9637,
        -1.1972, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.7830,  1.5791,  3.6876,  1.5547,  4.2802, -0.1582,  2.1038, -0.4140,
         5.3391, -0.4593, -0.0141, -0.1222, -1.7313,  0.4230,  0.5238,  0.3716,
         7.8558, -1.3249, -3.8747,  0.9820,  0.4987, 12.0911,  2.1344, -7.6960,
        -6.7349, -0.0264,  3.1038, -0.6932,  3.3783, -1.8232,  3.2417,  1.3011,
         3.4132,  0.8436,  4.3073, -4.6878, -2.0959, -1.2998,  0.4549,  8.0337,
        -0.3351, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.8652,  0.8748, -4.8527, -4.9465,  4.0990, -5.5775, -6.5508, -5.3707,
         5.3384, -5.1890, -5.8491, -5.5843, -4.8815, -4.6837, -5.9429, -4.3441,
         5.6624, -5.3007, -2.8039,  1.8362, -4.8641, 12.6834, -5.8101, -4.7519,
        -6.6201, -7.8879,  3.8599,  2.2545,  4.5418, -6.9830,  4.6078,  1.1178,
         4.5530, -5.4394,  2.8668, -3.4478, -6.6511, -5.6615, -1.3076, -3.3742,
        -6.2922, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.0166, -0.4593,  3.9060,  1.7931,  5.4807, -0.1708,  0.7410, -0.7710,
         1.7924,  0.2107,  1.7211,  0.2711, -1.9357,  0.4088,  1.0060,  0.0722,
         8.2917, -1.8662, -4.8429,  1.2913,  0.8634, 11.6293,  3.0030, -7.5698,
        -7.2276, -2.6549,  3.2807, -1.1554,  4.3394,  0.6549,  3.4310, -3.1578,
         2.5784,  0.1759,  4.3609, -4.6059, -3.3339, -1.3371, -1.3455,  5.4001,
        -0.6296, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-3.9906, -0.5291,  3.3107,  1.4158,  4.5697,  0.0716,  1.1241, -1.2158,
         4.7441, -0.1436, -1.1742, -1.0426, -2.7611,  0.2796,  0.0927,  0.3760,
         6.6669,  0.8582, -5.4176,  0.6671,  0.4050, 11.4824,  1.7354, -7.7175,
        -7.0288, -0.0832,  1.5541, -5.4047,  4.2123, -3.7305,  3.7099,  2.7630,
         2.9553,  0.1957,  2.7154, -5.7202, -3.9731, -0.3915, -3.1429,  8.6114,
        -1.3372, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-6.1790, -2.6344,  0.1596, -0.8609,  0.4876, -1.6301, -2.1245, -2.5438,
         0.5822, -1.5252, -2.2964, -2.6689, -3.9308, -2.5764, -0.2681, -2.6813,
         5.3862, -4.3376, -4.2945, -3.4681, -1.3464,  8.4785,  1.4048, -8.2138,
        -8.1180, -4.3119,  0.6491, -0.9401, -2.3574, -4.1467,  3.3550, -1.6461,
         0.5269, -3.1368,  0.5404, -9.2508, -3.3913, -3.8772, -2.7917,  1.6593,
        -3.0106, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-5.6725, -2.8899, -5.9598, -4.8982, -5.9844, -5.9433,  1.0779, -6.3931,
        -6.6347, -4.8418, -4.8268, -5.0020, -3.7031, -5.0754, -5.3855, -5.8516,
        -3.9382, -7.1956, -6.3244, -3.0985, -5.2177, -1.3175, -4.3751, -3.6291,
        -4.2944, -1.5510, -2.1394, -9.1601, -1.3228, -4.4546, -3.3549, -4.6570,
        -6.3510, -5.8671, -7.6956, -5.6718, -1.5828, -5.3727, -2.7596,  8.2515,
        -6.2884, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.3324, -1.9503, -0.2120, -0.8617,  0.6707, -1.5910, -0.2907, -1.9609,
        -0.4719, -0.7229, -1.3368, -1.9273, -0.3027, -1.5554, -1.2346, -3.8431,
         6.0374, -1.7961, -4.0431,  0.4930, -0.9296,  3.0379, -0.0608, -9.8207,
        -5.7549, -1.3667,  2.5018, -3.1427,  0.9694, -1.9143,  2.8868, -0.0431,
         2.0243, -4.0830,  3.2896, -4.6187, -0.9761, -1.9793, -2.6907,  1.1531,
        -3.0540, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-4.5921, -0.3811,  2.7957,  1.2657,  4.9787,  0.0460, -0.6495, -0.6725,
         3.5154,  1.1060, -0.9413, -0.8516, -0.8476,  0.0222, -0.4117, -0.3224,
         5.7319,  0.8134, -3.7244,  0.6601,  0.3106, 12.1389,  2.7793, -9.2462,
        -7.8052, -2.5023,  2.2222, -1.0557,  3.8345, -1.5618,  3.5549,  1.3807,
         4.1457, -1.6447,  4.7061, -4.4991, -2.4507,  0.5814, -3.0762,  5.5359,
        -0.7080, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -5.4371,   0.7617,   4.3841,   1.5961,   4.0205,   1.5255,   1.5809,
          0.6752,   2.5904,   1.9498,   0.3340,   0.5321,  -2.2209,   1.3937,
          1.6049,   0.6407,   5.7660,   0.7173,  -5.5685,   0.3569,   1.6150,
         10.0683,   2.3944, -10.4385,  -7.9908,   0.7069,   1.2965,  -2.7050,
          3.9355,  -1.2420,   4.4498,   2.0734,   2.4303,   0.3742,   3.3566,
         -6.2269,  -2.1960,   1.5142,  -0.9364,   5.8044,  -0.1028,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -1.0048,  -5.4626,  -5.2258,  -7.6485,  -4.4730,  -3.7462,  -6.4183,
         -4.4615,  -5.1588,  -4.9608,  -4.6336,  -4.8777, -10.4873,  -2.8726,
         -4.1987,  -4.8977,  -8.2150,  -7.9627,  -4.5629,  -1.7464,  -5.0543,
         -8.8915,  -3.6542,  -5.3932,  -0.5518,  -5.4347,  -6.7741,   3.7585,
         -5.2607,  -4.4779,  -5.0619,  -8.1872,  -5.0619,  -1.4185, -10.1336,
         -8.2080,  -9.4314,   4.3721,  -3.9980,  -6.8535,  -7.5872,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([-5.0819,  0.5618,  3.5007,  3.0203,  4.7244, -0.1560,  0.9094, -0.8612,
         2.1112,  1.1505,  1.4009, -0.4061, -4.2413,  1.2827,  1.8948,  0.8703,
         5.8917, -3.8356, -3.4291,  0.0938,  1.0840, 11.3597,  2.0121, -4.8182,
        -9.1296, -3.0307,  1.7120, -3.0553,  5.2517,  0.3580,  3.7846, -0.9673,
         3.8363,  2.7664,  4.2046, -6.8263, -3.5164,  0.1838,  1.3764,  5.7495,
        -0.1915, -2.0000], device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -7.1591,  -5.7081,  -4.8355,  -5.9201,  -9.2092,  -5.9305,  -6.0516,
         -0.3588,   3.4809,  -7.5519,  -6.6073,  -6.9671, -10.2476,  -5.3544,
         -6.3781,  -0.6275,   1.5252,  -5.0589, -10.6915,  -7.6373,  -6.0419,
         -0.9960,  -7.5385,  -9.9330,  -7.4615,   0.3232,   1.1232,  -4.7698,
        -10.7569,  -9.6393,   3.7124,   1.0202,   1.0992,   1.1258,  -2.2742,
         -5.0055, -11.5734,  -6.4791,  -7.2663,   7.0425,  -0.6967,  -2.0000],
       device='cuda:0', requires_grad=True)

NLAndLuka

Parameter containing:
tensor([ -5.5704,  -5.2894,  -5.6509,  -3.4985,  -7.6792,  -4.4476,  -5.7980,
         -3.3348,  -6.5182,  -4.7029,  -4.8780,  -4.4815,   0.4060,  -5.1528,
         -5.8624,  -6.0659,  -5.7058,  -3.4860,   1.5408, -10.0913,  -5.0457,
         -4.0558,  -4.6320,  -0.1362, -10.8970,  -3.3770,  -6.3520,  -2.0888,
         -8.1569,  -3.8027,  -5.7548,  -5.0861,  -6.3371,  -7.3453,   4.4720,
         -1.8522,  -2.1093,  -3.7815,  -6.2475,  -7.8038,   0.7800,  -2.0000],
       device='cuda:0', requires_grad=True)

