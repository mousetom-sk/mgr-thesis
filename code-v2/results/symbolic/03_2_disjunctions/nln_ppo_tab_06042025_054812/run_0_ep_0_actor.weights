NLStack

NLOrLukaClamped

Parameter containing:
tensor([1., 1.], device='cuda:0')
NLAndBiLuka

Parameter containing:
tensor([ 2., -2.,  0.,  0.,  2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLAndBiLuka

Parameter containing:
tensor([ 2., -2.,  0.,  0.,  2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLOrLukaClamped

Parameter containing:
tensor([1., 1.], device='cuda:0')
NLAndBiLuka

Parameter containing:
tensor([ 2.,  0., -2.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLAndBiLuka

Parameter containing:
tensor([ 2.,  0., -2.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLOrLukaClamped

Parameter containing:
tensor([1., 1.], device='cuda:0')
NLAndBiLuka

Parameter containing:
tensor([ 2.,  0.,  0., -2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLAndBiLuka

Parameter containing:
tensor([ 2.,  0.,  0., -2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLOrLukaClamped

Parameter containing:
tensor([1., 1.], device='cuda:0')
NLAndBiLuka

Parameter containing:
tensor([ 2.,  0.,  0.,  0.,  2., -2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLAndBiLuka

Parameter containing:
tensor([ 2.,  0.,  0.,  0.,  2., -2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLOrLukaClamped

Parameter containing:
tensor([1., 1.], device='cuda:0')
NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  2.,  0., -2.,  0.,  2.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  2.,  0., -2.,  0.,  2.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLOrLukaClamped

Parameter containing:
tensor([1., 1.], device='cuda:0')
NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  2.,  0.,  0., -2.,  0.,  0.,  0.,  0.,  2.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  2.,  0.,  0., -2.,  0.,  0.,  0.,  0.,  2.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLOrLukaClamped

Parameter containing:
tensor([1., 1.], device='cuda:0')
NLAndBiLuka

Parameter containing:
tensor([ 2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2., -2.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLAndBiLuka

Parameter containing:
tensor([ 2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2., -2.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLOrLukaClamped

Parameter containing:
tensor([1., 1.], device='cuda:0')
NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  2.,  0.,  0.,  0.,  2.,  0., -2.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  2.,  0.,  0.,  0.,  2.,  0., -2.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLOrLukaClamped

Parameter containing:
tensor([1., 1.], device='cuda:0')
NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,  0., -2.,  2.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,  0., -2.,  2.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLOrLukaClamped

Parameter containing:
tensor([1., 1.], device='cuda:0')
NLAndBiLuka

Parameter containing:
tensor([ 2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2., -2.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLAndBiLuka

Parameter containing:
tensor([ 2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2., -2.,
         0.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLOrLukaClamped

Parameter containing:
tensor([1., 1.], device='cuda:0')
NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,
        -2.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,
        -2.,  0.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLOrLukaClamped

Parameter containing:
tensor([1., 1.], device='cuda:0')
NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,  0.,  0.,  2.,  0.,
         0., -2.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,  0.,  0.,  2.,  0.,
         0., -2.,  0.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLOrLukaClamped

Parameter containing:
tensor([1., 1.], device='cuda:0')
NLAndBiLuka

Parameter containing:
tensor([ 2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
         0.,  0., -2.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLAndBiLuka

Parameter containing:
tensor([ 2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
         0.,  0., -2.,  0.,  0.,  0.], device='cuda:0', requires_grad=True)

NLOrLukaClamped

Parameter containing:
tensor([1., 1.], device='cuda:0')
NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0., -2.,  0.,  0.], device='cuda:0', requires_grad=True)

NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0., -2.,  0.,  0.], device='cuda:0', requires_grad=True)

NLOrLukaClamped

Parameter containing:
tensor([1., 1.], device='cuda:0')
NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0., -2.,  0.], device='cuda:0', requires_grad=True)

NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0., -2.,  0.], device='cuda:0', requires_grad=True)

NLOrLukaClamped

Parameter containing:
tensor([1., 1.], device='cuda:0')
NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,
         0.,  0.,  0.,  0.,  0., -2.], device='cuda:0', requires_grad=True)

NLAndBiLuka

Parameter containing:
tensor([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2.,  0.,
         0.,  0.,  0.,  0.,  0., -2.], device='cuda:0', requires_grad=True)

